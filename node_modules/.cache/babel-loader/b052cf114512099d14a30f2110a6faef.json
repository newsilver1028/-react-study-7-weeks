{"ast":null,"code":"var _jsxFileName = \"/Users/newsilver/Project/react-study-7-weeks/src/Components/Foods.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport Food from './Food';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Foods(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const foodsList = props.foodsList;\n  const {\n    foodData\n  } = useSelector(store => store.cartReducer);\n  const {\n    cartData\n  } = useSelector(store => store.cartReducer);\n  const storedFoods = cartData.storedFoods;\n\n  const onAdd = target => {\n    dispatch(cartReducer.actions.ADD(target));\n  };\n\n  function addCartClickHandler(event) {\n    const target = event.target.id;\n    const isOverlapped = storedFoods.filter(item => item.name === target).length !== 0;\n\n    if (isOverlapped) {\n      alert(\"이미 장바구니에 등록된 상품입니다.\");\n      return;\n    }\n\n    onAdd(target);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: foodsList.map(food => {\n      const {\n        name,\n        price,\n        _\n      } = food; // const name = food.name;\n      // const price = food.price; // 1000단위 마다 ,를 붙여야 함\n\n      return /*#__PURE__*/_jsxDEV(Food, {\n        name: name,\n        price: price,\n        onAdd: addCartClickHandler\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Foods, \"yftZGbFO6nGjspToPia6QyiWQhs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Foods;\n\nvar _c;\n\n$RefreshReg$(_c, \"Foods\");","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/Foods.tsx"],"names":["useSelector","useDispatch","cartReducer","Food","Foods","props","dispatch","foodsList","foodData","store","cartData","storedFoods","onAdd","target","actions","ADD","addCartClickHandler","event","id","isOverlapped","filter","item","name","length","alert","map","food","price","_"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,SAASC,WAAT,QAA4B,yBAA5B;AAGA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAA6B;AAAA;;AAC1C,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,SAAS,GAAGF,KAAK,CAACE,SAAxB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAeR,WAAW,CAAES,KAAD,IAAsBA,KAAK,CAACP,WAA7B,CAAhC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeV,WAAW,CAAES,KAAD,IAAsBA,KAAK,CAACP,WAA7B,CAAhC;AACA,QAAMS,WAAW,GAAGD,QAAQ,CAACC,WAA7B;;AAEA,QAAMC,KAAK,GAAIC,MAAD,IAAoB;AAChCP,IAAAA,QAAQ,CAACJ,WAAW,CAACY,OAAZ,CAAoBC,GAApB,CAAwBF,MAAxB,CAAD,CAAR;AACD,GAFD;;AAIA,WAASG,mBAAT,CAA6BC,KAA7B,EAAmF;AACjF,UAAMJ,MAAM,GAAGI,KAAK,CAACJ,MAAN,CAAaK,EAA5B;AACA,UAAMC,YAAY,GAAGR,WAAW,CAACS,MAAZ,CAAoBC,IAAD,IAAiBA,IAAI,CAACC,IAAL,KAAcT,MAAlD,EAA0DU,MAA1D,KAAqE,CAA1F;;AACA,QAAIJ,YAAJ,EAAkB;AAChBK,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACA;AACD;;AACDZ,IAAAA,KAAK,CAACC,MAAD,CAAL;AACD;;AAGD,sBACE;AAAA,cACGN,SAAS,CAACkB,GAAV,CAAeC,IAAD,IAA0C;AACvD,YAAM;AAACJ,QAAAA,IAAD;AAAOK,QAAAA,KAAP;AAAcC,QAAAA;AAAd,UAAmBF,IAAzB,CADuD,CAEvD;AACA;;AACA,0BAAO,QAAC,IAAD;AAAiB,QAAA,IAAI,EAAEJ,IAAvB;AAA6B,QAAA,KAAK,EAAEK,KAApC;AAA2C,QAAA,KAAK,EAAEX;AAAlD,SAAWM,IAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KALA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAjCuBlB,K;UACLH,W,EAGID,W,EACAA,W;;;KALCI,K","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { ReactElement } from 'react';\n\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { RootState } from '../Reducers';\nimport { Data, FoodData, Discounts, Items, initialState } from '../Reducers/cartReducer';\nimport Food from './Food';\n\nexport default function Foods(props: Items) {\n  const dispatch = useDispatch();\n  const foodsList = props.foodsList;\n\n  const { foodData } = useSelector((store: RootState) => store.cartReducer);\n  const { cartData } = useSelector((store: RootState) => store.cartReducer);\n  const storedFoods = cartData.storedFoods;\n\n  const onAdd = (target: string) => {\n    dispatch(cartReducer.actions.ADD(target));\n  } \n\n  function addCartClickHandler(event: React.MouseEventHandler<HTMLDivElement>): void {\n    const target = event.target.id;\n    const isOverlapped = storedFoods.filter((item: Items) => item.name === target).length !== 0;\n    if (isOverlapped) {\n      alert(\"이미 장바구니에 등록된 상품입니다.\");\n      return;\n    }\n    onAdd(target);\n  }\n  \n\n  return (\n    <div>\n      {foodsList.map((food: Items): ReactElement<FoodProps> => {\n        const {name, price, _} = food;\n        // const name = food.name;\n        // const price = food.price; // 1000단위 마다 ,를 붙여야 함\n        return <Food key={name} name={name} price={price} onAdd={addCartClickHandler} />\n      })}\n    </div>\n  )\n}\n\nexport interface FoodProps {\n  name: string;\n  price: number;\n  onAdd: React.MouseEventHandler<HTMLDivElement>;\n}\n\n"]},"metadata":{},"sourceType":"module"}