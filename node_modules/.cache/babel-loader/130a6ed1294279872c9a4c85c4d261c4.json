{"ast":null,"code":"var _jsxFileName = \"/Users/newsilver/Project/react-study-7-weeks/src/Components/Food.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { discountReducer } from '../Reducers/discountReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Food(props) {\n  _s();\n\n  const {\n    name,\n    price\n  } = props;\n  const dispatch = useDispatch();\n  const {\n    cartData\n  } = useSelector(store => store.cartReducer);\n  const storedFoods = cartData.storedFoods;\n\n  const onAdd = target => {\n    dispatch(cartReducer.actions.ADD(target));\n    dispatch(cartReducer.actions.UPDATE());\n    dispatch(discountReducer.actions.ADD(storedFoods));\n  };\n\n  function addCartClickHandler(event) {\n    const target = event.target.id;\n    const isOverlapped = storedFoods.filter(item => item.name === target).length !== 0;\n\n    if (isOverlapped) {\n      alert(\"이미 장바구니에 등록된 상품입니다.\");\n      return;\n    }\n\n    onAdd(target);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      id: name,\n      onClick: addCartClickHandler,\n      children: [name, \" : \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: name + \"price\",\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Food, \"o/i9H9MvE9r5j+1rpp0nGRLpR6w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Food;\n\nvar _c;\n\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/Food.tsx"],"names":["useSelector","useDispatch","cartReducer","discountReducer","Food","props","name","price","dispatch","cartData","store","storedFoods","onAdd","target","actions","ADD","UPDATE","addCartClickHandler","event","id","isOverlapped","filter","item","length","alert"],"mappings":";;;AAGA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,WAAT,QAA4B,yBAA5B;AAGA,SAASC,eAAT,QAAgC,6BAAhC;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAA8C;AAAA;;AAC3D,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAiBF,KAAvB;AACA,QAAMG,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeT,WAAW,CAAEU,KAAD,IAAsBA,KAAK,CAACR,WAA7B,CAAhC;AACA,QAAMS,WAAW,GAAGF,QAAQ,CAACE,WAA7B;;AAEA,QAAMC,KAAK,GAAIC,MAAD,IAAoB;AAChCL,IAAAA,QAAQ,CAACN,WAAW,CAACY,OAAZ,CAAoBC,GAApB,CAAwBF,MAAxB,CAAD,CAAR;AACAL,IAAAA,QAAQ,CAACN,WAAW,CAACY,OAAZ,CAAoBE,MAApB,EAAD,CAAR;AACAR,IAAAA,QAAQ,CAACL,eAAe,CAACW,OAAhB,CAAwBC,GAAxB,CAA4BJ,WAA5B,CAAD,CAAR;AACD,GAJD;;AAMA,WAASM,mBAAT,CAA6BC,KAA7B,EAAmF;AACjF,UAAML,MAAM,GAAGK,KAAK,CAACL,MAAN,CAAaM,EAA5B;AACA,UAAMC,YAAY,GAAGT,WAAW,CAACU,MAAZ,CAAoBC,IAAD,IAAiBA,IAAI,CAAChB,IAAL,KAAcO,MAAlD,EAA0DU,MAA1D,KAAqE,CAA1F;;AACA,QAAIH,YAAJ,EAAkB;AAChBI,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACA;AACD;;AACDZ,IAAAA,KAAK,CAACC,MAAD,CAAL;AACD;;AAED,sBACE;AAAA,4BACA;AAAM,MAAA,EAAE,EAAEP,IAAV;AAAgB,MAAA,OAAO,EAAEW,mBAAzB;AAAA,iBAA+CX,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAM,MAAA,EAAE,EAAEA,IAAI,GAAC,OAAf;AAAA,gBAAyBC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA5BuBH,I;UAELH,W,EACID,W;;;KAHCI,I","sourcesContent":["import { ReactElement } from \"react\";\nimport { FoodProps } from './Foods';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { RootState } from '../Reducers';\nimport { Items } from '../Reducers/cartReducer';\nimport { discountReducer } from '../Reducers/discountReducer';\n\nexport default function Food(props: FoodProps): ReactElement {\n  const {name, price } = props;\n  const dispatch = useDispatch();\n  const { cartData } = useSelector((store: RootState) => store.cartReducer);\n  const storedFoods = cartData.storedFoods;\n\n  const onAdd = (target: string) => {\n    dispatch(cartReducer.actions.ADD(target));\n    dispatch(cartReducer.actions.UPDATE());\n    dispatch(discountReducer.actions.ADD(storedFoods));\n  } \n\n  function addCartClickHandler(event: React.MouseEventHandler<HTMLDivElement>): void {\n    const target = event.target.id;\n    const isOverlapped = storedFoods.filter((item: Items) => item.name === target).length !== 0;\n    if (isOverlapped) {\n      alert(\"이미 장바구니에 등록된 상품입니다.\");\n      return;\n    }\n    onAdd(target);\n  }\n  \n  return (\n    <div>\n    <span id={name} onClick={addCartClickHandler}>{name} : </span>\n    <span id={name+\"price\"}>{price}</span>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}