{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  foodData: {\n    minimum_order_price: 0,\n    merchant_name: \"\",\n    items: [],\n    discounts: []\n  },\n  count: 0,\n  cartData: {\n    storedFoods: [],\n    totalPrice: 0,\n    isOverMinimum: false\n  },\n  totalPrice: 0,\n  isOverMinimum: false\n};\nexport const cartReducer = createSlice({\n  name: 'cartReducer',\n  initialState: initialState,\n  reducers: {\n    STORE: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.foodData = payload;\n      state.count = 0;\n      state.cartData = {\n        storedFoods: [],\n        totalPrice: 0,\n        isOverMinimum: false\n      };\n    },\n    UPDATE: state => {\n      state.cartData.totalPrice = state.cartData.storedFoods.reduce((prev, current) => prev + current.priceTimesQuantity, 0);\n      state.cartData.isOverMinimum = state.foodData.minimum_order_price <= state.cartData.totalPrice;\n    },\n    ADD: (state, _ref2) => {\n      var _state$cartData;\n\n      let {\n        payload\n      } = _ref2;\n      const target = state.foodData.items.filter(item => item.name === payload)[0];\n      const targetObject = {\n        name: target.name,\n        quantitiy: 1,\n        price: target.price,\n        priceTimesQuantity: target.price\n      };\n      (_state$cartData = state.cartData) === null || _state$cartData === void 0 ? void 0 : _state$cartData.storedFoods.push(targetObject);\n      state.count++;\n    },\n    DELETE: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n\n      if (state.cartData !== undefined) {\n        state.cartData.storedFoods = state.cartData.storedFoods.filter(item => item.name !== payload);\n      }\n    },\n    INCREASE: (state, _ref4) => {\n      var _state$cartData2;\n\n      let {\n        payload\n      } = _ref4;\n      const target = (_state$cartData2 = state.cartData) === null || _state$cartData2 === void 0 ? void 0 : _state$cartData2.storedFoods.filter(item => item.name === payload)[0];\n      target.quantitiy++;\n      target.priceTimesQuantity = target.price * target.quantitiy;\n    },\n    DECREASE: (state, _ref5) => {\n      var _state$cartData3;\n\n      let {\n        payload\n      } = _ref5;\n      const target = (_state$cartData3 = state.cartData) === null || _state$cartData3 === void 0 ? void 0 : _state$cartData3.storedFoods.filter(item => item.name === payload)[0];\n      if (target.quantitiy === 1) return;\n      target.quantitiy--;\n      target.priceTimesQuantity = target.price * target.quantitiy;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Reducers/cartReducer.ts"],"names":["createSlice","initialState","foodData","minimum_order_price","merchant_name","items","discounts","count","cartData","storedFoods","totalPrice","isOverMinimum","cartReducer","name","reducers","STORE","state","payload","UPDATE","reduce","prev","current","priceTimesQuantity","ADD","target","filter","item","targetObject","quantitiy","price","push","DELETE","undefined","INCREASE","DECREASE"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { Data, FoodData, StoredFoods, Items } from '../Interface/cartInterface';\n\nexport const initialState = {\n  foodData: {\n    minimum_order_price: 0,\n    merchant_name: \"\",\n    items: [],\n    discounts: []\n  },\n  count: 0,\n  cartData: {\n    storedFoods: [],\n    totalPrice: 0,\n    isOverMinimum: false\n  },\n  totalPrice: 0,\n  isOverMinimum: false,\n}\n\nexport const cartReducer = createSlice({\n  name: 'cartReducer',\n  initialState: initialState as Data,\n  reducers: {\n    STORE: (state, { payload }: PayloadAction<FoodData>) => {\n      state.foodData = payload;\n      state.count = 0;\n      state.cartData = {\n        storedFoods: [],\n        totalPrice: 0,\n        isOverMinimum: false\n      }\n    },\n    UPDATE: (state) => {\n      state.cartData!.totalPrice = state.cartData!.storedFoods.reduce(\n        (prev, current) => prev + current.priceTimesQuantity,0);\n      state.cartData!.isOverMinimum = state.foodData.minimum_order_price <= state.cartData!.totalPrice;\n    },\n    ADD: (state, { payload }: PayloadAction<string>) => {\n      const target = state.foodData.items.filter((item: Items) => item.name === payload)[0];\n      const targetObject = {\n        name: target.name,\n        quantitiy: 1,\n        price: target.price,\n        priceTimesQuantity: target.price\n      }\n      state.cartData?.storedFoods.push(targetObject);\n      state.count!++;\n    },\n    DELETE: (state, { payload }: PayloadAction<string>) => {\n      if (state.cartData !== undefined) {\n        state.cartData.storedFoods = state.cartData.storedFoods.filter((item:StoredFoods) => item.name !== payload);\n      }\n    },\n    INCREASE: (state, { payload }: PayloadAction<string>) => {\n      const target = state.cartData?.storedFoods.filter((item:StoredFoods) => item.name === payload)[0] !;\n      target.quantitiy++;\n      target.priceTimesQuantity = target.price * target.quantitiy;\n    },\n    DECREASE: (state, { payload }: PayloadAction<string>) => {\n      const target = state.cartData?.storedFoods.filter((item:StoredFoods) => item.name === payload)[0] !;\n      if (target.quantitiy === 1) return;\n      target.quantitiy--;\n      target.priceTimesQuantity = target.price * target.quantitiy;\n    }\n  }\n});\n"]},"metadata":{},"sourceType":"module"}