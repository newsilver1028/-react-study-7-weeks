{"ast":null,"code":"import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n/**\r\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\r\n *\r\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\r\n * during build.\r\n * @param {number} code\r\n */\n\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\nvar $$observable = /* #__PURE__ */function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n}();\n\nvar $$observable$1 = $$observable;\n/**\r\n * These are private action types reserved by Redux.\r\n * For any unknown actions, you must return the current state.\r\n * If the current state is undefined, you must return the initial state.\r\n * Do not reference these action types directly in your code.\r\n */\n\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + /* #__PURE__ */randomString(),\n  REPLACE: \"@@redux/REPLACE\" + /* #__PURE__ */randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\nvar ActionTypes$1 = ActionTypes;\n/**\r\n * @param obj The object to inspect.\r\n * @returns True if the argument appears to be a plain object.\r\n */\n\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n} // Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\n\n\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return Object.prototype.toString.call(val).slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _store;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\r\n   * This makes a shallow copy of currentListeners so we can use\r\n   * nextListeners as a temporary list while dispatching.\r\n   *\r\n   * This prevents any bugs around consumers calling\r\n   * subscribe/unsubscribe in the middle of a dispatch.\r\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\r\n   * Reads the state tree managed by the store.\r\n   *\r\n   * @returns The current state tree of your application.\r\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\r\n   * Adds a change listener. It will be called any time an action is dispatched,\r\n   * and some part of the state tree may potentially have changed. You may then\r\n   * call `getState()` to read the current state tree inside the callback.\r\n   *\r\n   * You may call `dispatch()` from a change listener, with the following\r\n   * caveats:\r\n   *\r\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\r\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\r\n   * will not have any effect on the `dispatch()` that is currently in progress.\r\n   * However, the next `dispatch()` call, whether nested or not, will use a more\r\n   * recent snapshot of the subscription list.\r\n   *\r\n   * 2. The listener should not expect to see all state changes, as the state\r\n   * might have been updated multiple times during a nested `dispatch()` before\r\n   * the listener is called. It is, however, guaranteed that all subscribers\r\n   * registered before the `dispatch()` started will be called with the latest\r\n   * state by the time it exits.\r\n   *\r\n   * @param listener A callback to be invoked on every dispatch.\r\n   * @returns A function to remove this change listener.\r\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\r\n   * Dispatches an action. It is the only way to trigger a state change.\r\n   *\r\n   * The `reducer` function, used to create the store, will be called with the\r\n   * current state tree and the given `action`. Its return value will\r\n   * be considered the **next** state of the tree, and the change listeners\r\n   * will be notified.\r\n   *\r\n   * The base implementation only supports plain object actions. If you want to\r\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\r\n   * wrap your store creating function into the corresponding middleware. For\r\n   * example, see the documentation for the `redux-thunk` package. Even the\r\n   * middleware will eventually dispatch plain object actions using this method.\r\n   *\r\n   * @param action A plain object representing “what changed”. It is\r\n   * a good idea to keep actions serializable so you can record and replay user\r\n   * sessions, or use the time travelling `redux-devtools`. An action must have\r\n   * a `type` property which may not be `undefined`. It is a good idea to use\r\n   * string constants for action types.\r\n   *\r\n   * @returns For convenience, the same action object you dispatched.\r\n   *\r\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\r\n   * return something else (for example, a Promise you can await).\r\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\r\n   * Replaces the reducer currently used by the store to calculate the state.\r\n   *\r\n   * You might need this if your app implements code splitting and you want to\r\n   * load some of the reducers dynamically. You might also need this if you\r\n   * implement a hot reloading mechanism for Redux.\r\n   *\r\n   * @param nextReducer The reducer for the store to use instead.\r\n   * @returns The same store instance with a new reducer in place.\r\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    } // TODO: do this more elegantly\n\n\n    currentReducer = nextReducer; // This action has a similar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes$1.REPLACE\n    }); // change the type of the store by casting it to the new store\n\n    return store;\n  }\n  /**\r\n   * Interoperability point for observable/reactive libraries.\r\n   * @returns A minimal observable of state changes.\r\n   * For more information, see the observable proposal:\r\n   * https://github.com/tc39/proposal-observable\r\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\r\n       * The minimal observable subscription method.\r\n       * @param observer Any object that can be used as an observer.\r\n       * The observer object should have a `next` method.\r\n       * @returns An object with an `unsubscribe` method that can\r\n       * be used to unsubscribe the observable from the store, and prevent further\r\n       * emission of values from the observable.\r\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          var observerAsObserver = observer;\n\n          if (observerAsObserver.next) {\n            observerAsObserver.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable$1] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes$1.INIT\n  });\n  var store = (_store = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _store[$$observable$1] = observable, _store);\n  return store;\n}\n/**\r\n * Prints a warning in the console if it exists.\r\n *\r\n * @param message The warning message.\r\n */\n\n\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes$1.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes$1.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes$1.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes$1.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes$1.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return dispatch(actionCreator.apply(this, args));\n  };\n}\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    // infer the argument type so it is usable in inference down the line\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState) {\n      var store = createStore(reducer, preloadedState);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          return _dispatch.apply(void 0, [action].concat(args));\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n} // functions\n\n/*\r\n * This is a dummy function to check if the function name has been altered by minification.\r\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\r\n */\n\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/configuration/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes$1 as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/node_modules/redux/es/redux.js"],"names":["_objectSpread","formatProdErrorMessage","code","$$observable","Symbol","observable","$$observable$1","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","ActionTypes$1","isPlainObject","obj","proto","Object","getPrototypeOf","miniKindOf","val","type","Array","isArray","isDate","isError","constructorName","ctorName","prototype","call","slice","toLowerCase","replace","constructor","name","Error","message","stackTraceLimit","Date","toDateString","getDate","setDate","kindOf","typeOfVal","process","env","NODE_ENV","createStore","reducer","preloadedState","enhancer","_store","arguments","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","listener","isSubscribed","push","unsubscribe","index","indexOf","splice","dispatch","action","listeners","i","length","replaceReducer","nextReducer","store","_ref","outerSubscribe","observer","observeState","observerAsObserver","next","warning","console","error","e","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","keys","argumentName","unexpectedKeys","filter","key","hasOwnProperty","forEach","assertReducerShape","initialState","combineReducers","finalReducers","finalReducerKeys","shapeAssertionError","combination","state","warningMessage","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","actionType","String","bindActionCreator","actionCreator","_len","args","apply","bindActionCreators","actionCreators","boundActionCreators","compose","funcs","arg","reduce","a","b","applyMiddleware","middlewares","_dispatch","middlewareAPI","_len2","_key2","concat","chain","map","middleware","isCrushed","__DO_NOT_USE__ActionTypes"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,sBAAT,CAAgCC,IAAhC,EAAsC;AACpC,SAAO,2BAA2BA,IAA3B,GAAkC,2CAAlC,GAAgFA,IAAhF,GAAuF,2BAAvF,GAAqH,wDAA5H;AACD;;AAED,IAAIC,YAAY,GAAG,eAAe,YAAY;AAC5C,SAAO,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,UAAvC,IAAqD,cAA5D;AACD,CAFiC,EAAlC;;AAIA,IAAIC,cAAc,GAAGH,YAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAII,YAAY,GAAG,SAASA,YAAT,GAAwB;AACzC,SAAOC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,EAAwCC,KAAxC,CAA8C,EAA9C,EAAkDC,IAAlD,CAAuD,GAAvD,CAAP;AACD,CAFD;;AAIA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE,iBAAiB,eAAeR,YAAY,EADlC;AAEhBS,EAAAA,OAAO,EAAE,oBAAoB,eAAeT,YAAY,EAFxC;AAGhBU,EAAAA,oBAAoB,EAAE,SAASA,oBAAT,GAAgC;AACpD,WAAO,iCAAiCV,YAAY,EAApD;AACD;AALe,CAAlB;AAOA,IAAIW,aAAa,GAAGJ,WAApB;AAEA;AACA;AACA;AACA;;AACA,SAASK,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,MAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C,OAAO,KAAP;AAC7C,MAAIC,KAAK,GAAGD,GAAZ;;AAEA,SAAOE,MAAM,CAACC,cAAP,CAAsBF,KAAtB,MAAiC,IAAxC,EAA8C;AAC5CA,IAAAA,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBF,KAAtB,CAAR;AACD;;AAED,SAAOC,MAAM,CAACC,cAAP,CAAsBH,GAAtB,MAA+BC,KAAtC;AACD,C,CAED;;;AACA,SAASG,UAAT,CAAoBC,GAApB,EAAyB;AACvB,MAAIA,GAAG,KAAK,KAAK,CAAjB,EAAoB,OAAO,WAAP;AACpB,MAAIA,GAAG,KAAK,IAAZ,EAAkB,OAAO,MAAP;AAClB,MAAIC,IAAI,GAAG,OAAOD,GAAlB;;AAEA,UAAQC,IAAR;AACE,SAAK,SAAL;AACA,SAAK,QAAL;AACA,SAAK,QAAL;AACA,SAAK,QAAL;AACA,SAAK,UAAL;AACE;AACE,eAAOA,IAAP;AACD;AARL;;AAWA,MAAIC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAJ,EAAwB,OAAO,OAAP;AACxB,MAAII,MAAM,CAACJ,GAAD,CAAV,EAAiB,OAAO,MAAP;AACjB,MAAIK,OAAO,CAACL,GAAD,CAAX,EAAkB,OAAO,OAAP;AAClB,MAAIM,eAAe,GAAGC,QAAQ,CAACP,GAAD,CAA9B;;AAEA,UAAQM,eAAR;AACE,SAAK,QAAL;AACA,SAAK,SAAL;AACA,SAAK,SAAL;AACA,SAAK,SAAL;AACA,SAAK,KAAL;AACA,SAAK,KAAL;AACE,aAAOA,eAAP;AAPJ,GArBuB,CA6BrB;;;AAGF,SAAOT,MAAM,CAACW,SAAP,CAAiBvB,QAAjB,CAA0BwB,IAA1B,CAA+BT,GAA/B,EAAoCU,KAApC,CAA0C,CAA1C,EAA6C,CAAC,CAA9C,EAAiDC,WAAjD,GAA+DC,OAA/D,CAAuE,KAAvE,EAA8E,EAA9E,CAAP;AACD;;AAED,SAASL,QAAT,CAAkBP,GAAlB,EAAuB;AACrB,SAAO,OAAOA,GAAG,CAACa,WAAX,KAA2B,UAA3B,GAAwCb,GAAG,CAACa,WAAJ,CAAgBC,IAAxD,GAA+D,IAAtE;AACD;;AAED,SAAST,OAAT,CAAiBL,GAAjB,EAAsB;AACpB,SAAOA,GAAG,YAAYe,KAAf,IAAwB,OAAOf,GAAG,CAACgB,OAAX,KAAuB,QAAvB,IAAmChB,GAAG,CAACa,WAAvC,IAAsD,OAAOb,GAAG,CAACa,WAAJ,CAAgBI,eAAvB,KAA2C,QAAhI;AACD;;AAED,SAASb,MAAT,CAAgBJ,GAAhB,EAAqB;AACnB,MAAIA,GAAG,YAAYkB,IAAnB,EAAyB,OAAO,IAAP;AACzB,SAAO,OAAOlB,GAAG,CAACmB,YAAX,KAA4B,UAA5B,IAA0C,OAAOnB,GAAG,CAACoB,OAAX,KAAuB,UAAjE,IAA+E,OAAOpB,GAAG,CAACqB,OAAX,KAAuB,UAA7G;AACD;;AAED,SAASC,MAAT,CAAgBtB,GAAhB,EAAqB;AACnB,MAAIuB,SAAS,GAAG,OAAOvB,GAAvB;;AAEA,MAAIwB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,IAAAA,SAAS,GAAGxB,UAAU,CAACC,GAAD,CAAtB;AACD;;AAED,SAAOuB,SAAP;AACD;;AAED,SAASI,WAAT,CAAqBC,OAArB,EAA8BC,cAA9B,EAA8CC,QAA9C,EAAwD;AACtD,MAAIC,MAAJ;;AAEA,MAAI,OAAOF,cAAP,KAA0B,UAA1B,IAAwC,OAAOC,QAAP,KAAoB,UAA5D,IAA0E,OAAOA,QAAP,KAAoB,UAApB,IAAkC,OAAOE,SAAS,CAAC,CAAD,CAAhB,KAAwB,UAAxI,EAAoJ;AAClJ,UAAM,IAAIjB,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,CAAD,CAA9D,GAAoE,8DAA8D,8DAA9D,GAA+H,6IAA7M,CAAN;AACD;;AAED,MAAI,OAAOqD,cAAP,KAA0B,UAA1B,IAAwC,OAAOC,QAAP,KAAoB,WAAhE,EAA6E;AAC3EA,IAAAA,QAAQ,GAAGD,cAAX;AACAA,IAAAA,cAAc,GAAGI,SAAjB;AACD;;AAED,MAAI,OAAOH,QAAP,KAAoB,WAAxB,EAAqC;AACnC,QAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,YAAM,IAAIf,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,CAAD,CAA9D,GAAoE,iEAAiE8C,MAAM,CAACQ,QAAD,CAAvE,GAAoF,GAAlK,CAAN;AACD;;AAED,WAAOA,QAAQ,CAACH,WAAD,CAAR,CAAsBC,OAAtB,EAA+BC,cAA/B,CAAP;AACD;;AAED,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjC,UAAM,IAAIb,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,CAAD,CAA9D,GAAoE,qEAAqE8C,MAAM,CAACM,OAAD,CAA3E,GAAuF,GAArK,CAAN;AACD;;AAED,MAAIM,cAAc,GAAGN,OAArB;AACA,MAAIO,YAAY,GAAGN,cAAnB;AACA,MAAIO,gBAAgB,GAAG,EAAvB;AACA,MAAIC,aAAa,GAAGD,gBAApB;AACA,MAAIE,aAAa,GAAG,KAApB;AACA;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE,WAASC,4BAAT,GAAwC;AACtC,QAAIF,aAAa,KAAKD,gBAAtB,EAAwC;AACtCC,MAAAA,aAAa,GAAGD,gBAAgB,CAAC1B,KAAjB,EAAhB;AACD;AACF;AACD;AACF;AACA;AACA;AACA;;;AAGE,WAAS8B,QAAT,GAAoB;AAClB,QAAIF,aAAJ,EAAmB;AACjB,YAAM,IAAIvB,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,CAAD,CAA9D,GAAoE,uEAAuE,6DAAvE,GAAuI,yEAArN,CAAN;AACD;;AAED,WAAO2D,YAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGE,WAASM,SAAT,CAAmBC,QAAnB,EAA6B;AAC3B,QAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,YAAM,IAAI3B,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,CAAD,CAA9D,GAAoE,iEAAiE8C,MAAM,CAACoB,QAAD,CAAvE,GAAoF,GAAlK,CAAN;AACD;;AAED,QAAIJ,aAAJ,EAAmB;AACjB,YAAM,IAAIvB,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,CAAD,CAA9D,GAAoE,wEAAwE,sFAAxE,GAAiK,oFAAjK,GAAwP,wEAAtU,CAAN;AACD;;AAED,QAAImE,YAAY,GAAG,IAAnB;AACAJ,IAAAA,4BAA4B;AAC5BF,IAAAA,aAAa,CAACO,IAAd,CAAmBF,QAAnB;AACA,WAAO,SAASG,WAAT,GAAuB;AAC5B,UAAI,CAACF,YAAL,EAAmB;AACjB;AACD;;AAED,UAAIL,aAAJ,EAAmB;AACjB,cAAM,IAAIvB,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,CAAD,CAA9D,GAAoE,mFAAmF,wEAAjK,CAAN;AACD;;AAEDmE,MAAAA,YAAY,GAAG,KAAf;AACAJ,MAAAA,4BAA4B;AAC5B,UAAIO,KAAK,GAAGT,aAAa,CAACU,OAAd,CAAsBL,QAAtB,CAAZ;AACAL,MAAAA,aAAa,CAACW,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AACAV,MAAAA,gBAAgB,GAAG,IAAnB;AACD,KAdD;AAeD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGE,WAASa,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,QAAI,CAACxD,aAAa,CAACwD,MAAD,CAAlB,EAA4B;AAC1B,YAAM,IAAInC,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,CAAD,CAA9D,GAAoE,mEAAmE8C,MAAM,CAAC4B,MAAD,CAAzE,GAAoF,4UAAlK,CAAN;AACD;;AAED,QAAI,OAAOA,MAAM,CAACjD,IAAd,KAAuB,WAA3B,EAAwC;AACtC,YAAM,IAAIc,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,CAAD,CAA9D,GAAoE,4GAA9E,CAAN;AACD;;AAED,QAAI8D,aAAJ,EAAmB;AACjB,YAAM,IAAIvB,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,CAAD,CAA9D,GAAoE,oCAA9E,CAAN;AACD;;AAED,QAAI;AACF8D,MAAAA,aAAa,GAAG,IAAhB;AACAH,MAAAA,YAAY,GAAGD,cAAc,CAACC,YAAD,EAAee,MAAf,CAA7B;AACD,KAHD,SAGU;AACRZ,MAAAA,aAAa,GAAG,KAAhB;AACD;;AAED,QAAIa,SAAS,GAAGf,gBAAgB,GAAGC,aAAnC;;AAEA,SAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,UAAIV,QAAQ,GAAGS,SAAS,CAACC,CAAD,CAAxB;AACAV,MAAAA,QAAQ;AACT;;AAED,WAAOQ,MAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGE,WAASI,cAAT,CAAwBC,WAAxB,EAAqC;AACnC,QAAI,OAAOA,WAAP,KAAuB,UAA3B,EAAuC;AACrC,YAAM,IAAIxC,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,EAAD,CAA9D,GAAqE,oEAAoE8C,MAAM,CAACiC,WAAD,CAAzJ,CAAN;AACD,KAHkC,CAGjC;;;AACFrB,IAAAA,cAAc,GAAGqB,WAAjB,CAJmC,CAIL;AAC9B;AACA;AACA;;AAEAN,IAAAA,QAAQ,CAAC;AACPhD,MAAAA,IAAI,EAAER,aAAa,CAACF;AADb,KAAD,CAAR,CATmC,CAW/B;;AAEJ,WAAOiE,KAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;;;AAGE,WAAS5E,UAAT,GAAsB;AACpB,QAAI6E,IAAJ;;AAEA,QAAIC,cAAc,GAAGjB,SAArB;AACA,WAAOgB,IAAI,GAAG;AACZ;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACMhB,MAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBkB,QAAnB,EAA6B;AACtC,YAAI,OAAOA,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,KAAK,IAAjD,EAAuD;AACrD,gBAAM,IAAI5C,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,EAAD,CAA9D,GAAqE,gEAAgE8C,MAAM,CAACqC,QAAD,CAAtE,GAAmF,GAAlK,CAAN;AACD;;AAED,iBAASC,YAAT,GAAwB;AACtB,cAAIC,kBAAkB,GAAGF,QAAzB;;AAEA,cAAIE,kBAAkB,CAACC,IAAvB,EAA6B;AAC3BD,YAAAA,kBAAkB,CAACC,IAAnB,CAAwBtB,QAAQ,EAAhC;AACD;AACF;;AAEDoB,QAAAA,YAAY;AACZ,YAAIf,WAAW,GAAGa,cAAc,CAACE,YAAD,CAAhC;AACA,eAAO;AACLf,UAAAA,WAAW,EAAEA;AADR,SAAP;AAGD;AA3BW,KAAP,EA4BJY,IAAI,CAAC5E,cAAD,CAAJ,GAAuB,YAAY;AACpC,aAAO,IAAP;AACD,KA9BM,EA8BJ4E,IA9BH;AA+BD,GA3OqD,CA2OpD;AACF;AACA;;;AAGAR,EAAAA,QAAQ,CAAC;AACPhD,IAAAA,IAAI,EAAER,aAAa,CAACH;AADb,GAAD,CAAR;AAGA,MAAIkE,KAAK,IAAIzB,MAAM,GAAG;AACpBkB,IAAAA,QAAQ,EAAEA,QADU;AAEpBR,IAAAA,SAAS,EAAEA,SAFS;AAGpBD,IAAAA,QAAQ,EAAEA,QAHU;AAIpBc,IAAAA,cAAc,EAAEA;AAJI,GAAT,EAKVvB,MAAM,CAAClD,cAAD,CAAN,GAAyBD,UALf,EAK2BmD,MAL/B,CAAT;AAMA,SAAOyB,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASO,OAAT,CAAiB/C,OAAjB,EAA0B;AACxB;AACA,MAAI,OAAOgD,OAAP,KAAmB,WAAnB,IAAkC,OAAOA,OAAO,CAACC,KAAf,KAAyB,UAA/D,EAA2E;AACzED,IAAAA,OAAO,CAACC,KAAR,CAAcjD,OAAd;AACD;AACD;;;AAGA,MAAI;AACF;AACA;AACA;AACA,UAAM,IAAID,KAAJ,CAAUC,OAAV,CAAN;AACD,GALD,CAKE,OAAOkD,CAAP,EAAU,CAAE,CAbU,CAaT;;AAEhB;;AAED,SAASC,qCAAT,CAA+CC,UAA/C,EAA2DC,QAA3D,EAAqEnB,MAArE,EAA6EoB,kBAA7E,EAAiG;AAC/F,MAAIC,WAAW,GAAG1E,MAAM,CAAC2E,IAAP,CAAYH,QAAZ,CAAlB;AACA,MAAII,YAAY,GAAGvB,MAAM,IAAIA,MAAM,CAACjD,IAAP,KAAgBR,aAAa,CAACH,IAAxC,GAA+C,+CAA/C,GAAiG,wCAApH;;AAEA,MAAIiF,WAAW,CAAClB,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,WAAO,wEAAwE,4DAA/E;AACD;;AAED,MAAI,CAAC3D,aAAa,CAAC0E,UAAD,CAAlB,EAAgC;AAC9B,WAAO,SAASK,YAAT,GAAwB,4BAAxB,GAAuDnD,MAAM,CAAC8C,UAAD,CAA7D,GAA4E,2DAA5E,IAA2I,aAAaG,WAAW,CAACnF,IAAZ,CAAiB,MAAjB,CAAb,GAAwC,IAAnL,CAAP;AACD;;AAED,MAAIsF,cAAc,GAAG7E,MAAM,CAAC2E,IAAP,CAAYJ,UAAZ,EAAwBO,MAAxB,CAA+B,UAAUC,GAAV,EAAe;AACjE,WAAO,CAACP,QAAQ,CAACQ,cAAT,CAAwBD,GAAxB,CAAD,IAAiC,CAACN,kBAAkB,CAACM,GAAD,CAA3D;AACD,GAFoB,CAArB;AAGAF,EAAAA,cAAc,CAACI,OAAf,CAAuB,UAAUF,GAAV,EAAe;AACpCN,IAAAA,kBAAkB,CAACM,GAAD,CAAlB,GAA0B,IAA1B;AACD,GAFD;AAGA,MAAI1B,MAAM,IAAIA,MAAM,CAACjD,IAAP,KAAgBR,aAAa,CAACF,OAA5C,EAAqD;;AAErD,MAAImF,cAAc,CAACrB,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,WAAO,iBAAiBqB,cAAc,CAACrB,MAAf,GAAwB,CAAxB,GAA4B,MAA5B,GAAqC,KAAtD,IAA+D,GAA/D,IAAsE,OAAOqB,cAAc,CAACtF,IAAf,CAAoB,MAApB,CAAP,GAAqC,cAArC,GAAsDqF,YAAtD,GAAqE,IAA3I,IAAmJ,0DAAnJ,IAAiN,OAAOF,WAAW,CAACnF,IAAZ,CAAiB,MAAjB,CAAP,GAAkC,sCAAnP,CAAP;AACD;AACF;;AAED,SAAS2F,kBAAT,CAA4BV,QAA5B,EAAsC;AACpCxE,EAAAA,MAAM,CAAC2E,IAAP,CAAYH,QAAZ,EAAsBS,OAAtB,CAA8B,UAAUF,GAAV,EAAe;AAC3C,QAAIhD,OAAO,GAAGyC,QAAQ,CAACO,GAAD,CAAtB;AACA,QAAII,YAAY,GAAGpD,OAAO,CAACK,SAAD,EAAY;AACpChC,MAAAA,IAAI,EAAER,aAAa,CAACH;AADgB,KAAZ,CAA1B;;AAIA,QAAI,OAAO0F,YAAP,KAAwB,WAA5B,EAAyC;AACvC,YAAM,IAAIjE,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,EAAD,CAA9D,GAAqE,iCAAiCoG,GAAjC,GAAuC,+CAAvC,GAAyF,4DAAzF,GAAwJ,6DAAxJ,GAAwN,uEAAxN,GAAkS,wCAAjX,CAAN;AACD;;AAED,QAAI,OAAOhD,OAAO,CAACK,SAAD,EAAY;AAC5BhC,MAAAA,IAAI,EAAER,aAAa,CAACD,oBAAd;AADsB,KAAZ,CAAd,KAEG,WAFP,EAEoB;AAClB,YAAM,IAAIuB,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,EAAD,CAA9D,GAAqE,iCAAiCoG,GAAjC,GAAuC,wDAAvC,IAAmG,0BAA0BnF,aAAa,CAACH,IAAxC,GAA+C,oCAAlJ,IAA0L,uEAA1L,GAAoQ,iEAApQ,GAAwU,qEAAxU,GAAgZ,uEAA/d,CAAN;AACD;AACF,GAfD;AAgBD;;AAED,SAAS2F,eAAT,CAAyBZ,QAAzB,EAAmC;AACjC,MAAIE,WAAW,GAAG1E,MAAM,CAAC2E,IAAP,CAAYH,QAAZ,CAAlB;AACA,MAAIa,aAAa,GAAG,EAApB;;AAEA,OAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,WAAW,CAAClB,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,QAAIwB,GAAG,GAAGL,WAAW,CAACnB,CAAD,CAArB;;AAEA,QAAI5B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,OAAO2C,QAAQ,CAACO,GAAD,CAAf,KAAyB,WAA7B,EAA0C;AACxCb,QAAAA,OAAO,CAAC,mCAAmCa,GAAnC,GAAyC,IAA1C,CAAP;AACD;AACF;;AAED,QAAI,OAAOP,QAAQ,CAACO,GAAD,CAAf,KAAyB,UAA7B,EAAyC;AACvCM,MAAAA,aAAa,CAACN,GAAD,CAAb,GAAqBP,QAAQ,CAACO,GAAD,CAA7B;AACD;AACF;;AAED,MAAIO,gBAAgB,GAAGtF,MAAM,CAAC2E,IAAP,CAAYU,aAAZ,CAAvB,CAlBiC,CAkBkB;AACnD;;AAEA,MAAIZ,kBAAJ;;AAEA,MAAI9C,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC4C,IAAAA,kBAAkB,GAAG,EAArB;AACD;;AAED,MAAIc,mBAAJ;;AAEA,MAAI;AACFL,IAAAA,kBAAkB,CAACG,aAAD,CAAlB;AACD,GAFD,CAEE,OAAOhB,CAAP,EAAU;AACVkB,IAAAA,mBAAmB,GAAGlB,CAAtB;AACD;;AAED,SAAO,SAASmB,WAAT,CAAqBC,KAArB,EAA4BpC,MAA5B,EAAoC;AACzC,QAAIoC,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBA,MAAAA,KAAK,GAAG,EAAR;AACD;;AAED,QAAIF,mBAAJ,EAAyB;AACvB,YAAMA,mBAAN;AACD;;AAED,QAAI5D,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI6D,cAAc,GAAGpB,qCAAqC,CAACmB,KAAD,EAAQJ,aAAR,EAAuBhC,MAAvB,EAA+BoB,kBAA/B,CAA1D;;AAEA,UAAIiB,cAAJ,EAAoB;AAClBxB,QAAAA,OAAO,CAACwB,cAAD,CAAP;AACD;AACF;;AAED,QAAIC,UAAU,GAAG,KAAjB;AACA,QAAIC,SAAS,GAAG,EAAhB;;AAEA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGP,gBAAgB,CAAC9B,MAAvC,EAA+CqC,EAAE,EAAjD,EAAqD;AACnD,UAAIC,IAAI,GAAGR,gBAAgB,CAACO,EAAD,CAA3B;AACA,UAAI9D,OAAO,GAAGsD,aAAa,CAACS,IAAD,CAA3B;AACA,UAAIC,mBAAmB,GAAGN,KAAK,CAACK,IAAD,CAA/B;AACA,UAAIE,eAAe,GAAGjE,OAAO,CAACgE,mBAAD,EAAsB1C,MAAtB,CAA7B;;AAEA,UAAI,OAAO2C,eAAP,KAA2B,WAA/B,EAA4C;AAC1C,YAAIC,UAAU,GAAG5C,MAAM,IAAIA,MAAM,CAACjD,IAAlC;AACA,cAAM,IAAIc,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,EAAD,CAA9D,GAAqE,yCAAyCsH,UAAU,GAAG,OAAOC,MAAM,CAACD,UAAD,CAAb,GAA4B,IAA/B,GAAsC,gBAAzF,IAA6G,gCAA7G,GAAgJH,IAAhJ,GAAuJ,yBAAvJ,GAAmL,sEAAnL,GAA4P,sFAA3U,CAAN;AACD;;AAEDF,MAAAA,SAAS,CAACE,IAAD,CAAT,GAAkBE,eAAlB;AACAL,MAAAA,UAAU,GAAGA,UAAU,IAAIK,eAAe,KAAKD,mBAA/C;AACD;;AAEDJ,IAAAA,UAAU,GAAGA,UAAU,IAAIL,gBAAgB,CAAC9B,MAAjB,KAA4BxD,MAAM,CAAC2E,IAAP,CAAYc,KAAZ,EAAmBjC,MAA1E;AACA,WAAOmC,UAAU,GAAGC,SAAH,GAAeH,KAAhC;AACD,GArCD;AAsCD;;AAED,SAASU,iBAAT,CAA2BC,aAA3B,EAA0ChD,QAA1C,EAAoD;AAClD,SAAO,YAAY;AACjB,SAAK,IAAIiD,IAAI,GAAGlE,SAAS,CAACqB,MAArB,EAA6B8C,IAAI,GAAG,IAAIjG,KAAJ,CAAUgG,IAAV,CAApC,EAAqDP,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGO,IAA3E,EAAiFP,IAAI,EAArF,EAAyF;AACvFQ,MAAAA,IAAI,CAACR,IAAD,CAAJ,GAAa3D,SAAS,CAAC2D,IAAD,CAAtB;AACD;;AAED,WAAO1C,QAAQ,CAACgD,aAAa,CAACG,KAAd,CAAoB,IAApB,EAA0BD,IAA1B,CAAD,CAAf;AACD,GAND;AAOD;;AAED,SAASE,kBAAT,CAA4BC,cAA5B,EAA4CrD,QAA5C,EAAsD;AACpD,MAAI,OAAOqD,cAAP,KAA0B,UAA9B,EAA0C;AACxC,WAAON,iBAAiB,CAACM,cAAD,EAAiBrD,QAAjB,CAAxB;AACD;;AAED,MAAI,OAAOqD,cAAP,KAA0B,QAA1B,IAAsCA,cAAc,KAAK,IAA7D,EAAmE;AACjE,UAAM,IAAIvF,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,EAAD,CAA9D,GAAqE,iFAAiF8C,MAAM,CAACgF,cAAD,CAAvF,GAA0G,KAA1G,GAAkH,8FAAjM,CAAN;AACD;;AAED,MAAIC,mBAAmB,GAAG,EAA1B;;AAEA,OAAK,IAAI3B,GAAT,IAAgB0B,cAAhB,EAAgC;AAC9B,QAAIL,aAAa,GAAGK,cAAc,CAAC1B,GAAD,CAAlC;;AAEA,QAAI,OAAOqB,aAAP,KAAyB,UAA7B,EAAyC;AACvCM,MAAAA,mBAAmB,CAAC3B,GAAD,CAAnB,GAA2BoB,iBAAiB,CAACC,aAAD,EAAgBhD,QAAhB,CAA5C;AACD;AACF;;AAED,SAAOsD,mBAAP;AACD;;AAED,SAASC,OAAT,GAAmB;AACjB,OAAK,IAAIN,IAAI,GAAGlE,SAAS,CAACqB,MAArB,EAA6BoD,KAAK,GAAG,IAAIvG,KAAJ,CAAUgG,IAAV,CAArC,EAAsDP,IAAI,GAAG,CAAlE,EAAqEA,IAAI,GAAGO,IAA5E,EAAkFP,IAAI,EAAtF,EAA0F;AACxFc,IAAAA,KAAK,CAACd,IAAD,CAAL,GAAc3D,SAAS,CAAC2D,IAAD,CAAvB;AACD;;AAED,MAAIc,KAAK,CAACpD,MAAN,KAAiB,CAArB,EAAwB;AACtB;AACA,WAAO,UAAUqD,GAAV,EAAe;AACpB,aAAOA,GAAP;AACD,KAFD;AAGD;;AAED,MAAID,KAAK,CAACpD,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAOoD,KAAK,CAAC,CAAD,CAAZ;AACD;;AAED,SAAOA,KAAK,CAACE,MAAN,CAAa,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClC,WAAO,YAAY;AACjB,aAAOD,CAAC,CAACC,CAAC,CAACT,KAAF,CAAQ,KAAK,CAAb,EAAgBpE,SAAhB,CAAD,CAAR;AACD,KAFD;AAGD,GAJM,CAAP;AAKD;;AAED,SAAS8E,eAAT,GAA2B;AACzB,OAAK,IAAIZ,IAAI,GAAGlE,SAAS,CAACqB,MAArB,EAA6B0D,WAAW,GAAG,IAAI7G,KAAJ,CAAUgG,IAAV,CAA3C,EAA4DP,IAAI,GAAG,CAAxE,EAA2EA,IAAI,GAAGO,IAAlF,EAAwFP,IAAI,EAA5F,EAAgG;AAC9FoB,IAAAA,WAAW,CAACpB,IAAD,CAAX,GAAoB3D,SAAS,CAAC2D,IAAD,CAA7B;AACD;;AAED,SAAO,UAAUhE,WAAV,EAAuB;AAC5B,WAAO,UAAUC,OAAV,EAAmBC,cAAnB,EAAmC;AACxC,UAAI2B,KAAK,GAAG7B,WAAW,CAACC,OAAD,EAAUC,cAAV,CAAvB;;AAEA,UAAImF,SAAS,GAAG,SAAS/D,QAAT,GAAoB;AAClC,cAAM,IAAIlC,KAAJ,CAAUS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClD,sBAAsB,CAAC,EAAD,CAA9D,GAAqE,oEAAoE,yDAAnJ,CAAN;AACD,OAFD;;AAIA,UAAIyI,aAAa,GAAG;AAClBzE,QAAAA,QAAQ,EAAEgB,KAAK,CAAChB,QADE;AAElBS,QAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,MAAlB,EAA0B;AAClC,eAAK,IAAIgE,KAAK,GAAGlF,SAAS,CAACqB,MAAtB,EAA8B8C,IAAI,GAAG,IAAIjG,KAAJ,CAAUgH,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,CAApB,GAAwB,CAAlC,CAArC,EAA2EC,KAAK,GAAG,CAAxF,EAA2FA,KAAK,GAAGD,KAAnG,EAA0GC,KAAK,EAA/G,EAAmH;AACjHhB,YAAAA,IAAI,CAACgB,KAAK,GAAG,CAAT,CAAJ,GAAkBnF,SAAS,CAACmF,KAAD,CAA3B;AACD;;AAED,iBAAOH,SAAS,CAACZ,KAAV,CAAgB,KAAK,CAArB,EAAwB,CAAClD,MAAD,EAASkE,MAAT,CAAgBjB,IAAhB,CAAxB,CAAP;AACD;AARiB,OAApB;AAUA,UAAIkB,KAAK,GAAGN,WAAW,CAACO,GAAZ,CAAgB,UAAUC,UAAV,EAAsB;AAChD,eAAOA,UAAU,CAACN,aAAD,CAAjB;AACD,OAFW,CAAZ;AAGAD,MAAAA,SAAS,GAAGR,OAAO,CAACJ,KAAR,CAAc,KAAK,CAAnB,EAAsBiB,KAAtB,EAA6B7D,KAAK,CAACP,QAAnC,CAAZ;AACA,aAAO1E,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKiF,KAAL,CAAd,EAA2B,EAA3B,EAA+B;AACjDP,QAAAA,QAAQ,EAAE+D;AADuC,OAA/B,CAApB;AAGD,KAxBD;AAyBD,GA1BD;AA2BD,C,CAED;;AACA;AACA;AACA;AACA;;;AAEA,SAASQ,SAAT,GAAqB,CAAE;;AAEvB,IAAIhG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,OAAO8F,SAAS,CAAC1G,IAAjB,KAA0B,QAAnE,IAA+E0G,SAAS,CAAC1G,IAAV,KAAmB,WAAtG,EAAmH;AACjHiD,EAAAA,OAAO,CAAC,iFAAiF,uEAAjF,GAA2J,oFAA3J,GAAkP,wFAAlP,GAA6U,gEAA9U,CAAP;AACD;;AAED,SAAStE,aAAa,IAAIgI,yBAA1B,EAAqDX,eAArD,EAAsET,kBAAtE,EAA0FpB,eAA1F,EAA2GuB,OAA3G,EAAoH7E,WAApH","sourcesContent":["import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\r\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\r\n *\r\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\r\n * during build.\r\n * @param {number} code\r\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\nvar $$observable = /* #__PURE__ */function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n}();\n\nvar $$observable$1 = $$observable;\n\n/**\r\n * These are private action types reserved by Redux.\r\n * For any unknown actions, you must return the current state.\r\n * If the current state is undefined, you must return the initial state.\r\n * Do not reference these action types directly in your code.\r\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + /* #__PURE__ */randomString(),\n  REPLACE: \"@@redux/REPLACE\" + /* #__PURE__ */randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\nvar ActionTypes$1 = ActionTypes;\n\n/**\r\n * @param obj The object to inspect.\r\n * @returns True if the argument appears to be a plain object.\r\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return Object.prototype.toString.call(val).slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _store;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\r\n   * This makes a shallow copy of currentListeners so we can use\r\n   * nextListeners as a temporary list while dispatching.\r\n   *\r\n   * This prevents any bugs around consumers calling\r\n   * subscribe/unsubscribe in the middle of a dispatch.\r\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\r\n   * Reads the state tree managed by the store.\r\n   *\r\n   * @returns The current state tree of your application.\r\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\r\n   * Adds a change listener. It will be called any time an action is dispatched,\r\n   * and some part of the state tree may potentially have changed. You may then\r\n   * call `getState()` to read the current state tree inside the callback.\r\n   *\r\n   * You may call `dispatch()` from a change listener, with the following\r\n   * caveats:\r\n   *\r\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\r\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\r\n   * will not have any effect on the `dispatch()` that is currently in progress.\r\n   * However, the next `dispatch()` call, whether nested or not, will use a more\r\n   * recent snapshot of the subscription list.\r\n   *\r\n   * 2. The listener should not expect to see all state changes, as the state\r\n   * might have been updated multiple times during a nested `dispatch()` before\r\n   * the listener is called. It is, however, guaranteed that all subscribers\r\n   * registered before the `dispatch()` started will be called with the latest\r\n   * state by the time it exits.\r\n   *\r\n   * @param listener A callback to be invoked on every dispatch.\r\n   * @returns A function to remove this change listener.\r\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\r\n   * Dispatches an action. It is the only way to trigger a state change.\r\n   *\r\n   * The `reducer` function, used to create the store, will be called with the\r\n   * current state tree and the given `action`. Its return value will\r\n   * be considered the **next** state of the tree, and the change listeners\r\n   * will be notified.\r\n   *\r\n   * The base implementation only supports plain object actions. If you want to\r\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\r\n   * wrap your store creating function into the corresponding middleware. For\r\n   * example, see the documentation for the `redux-thunk` package. Even the\r\n   * middleware will eventually dispatch plain object actions using this method.\r\n   *\r\n   * @param action A plain object representing “what changed”. It is\r\n   * a good idea to keep actions serializable so you can record and replay user\r\n   * sessions, or use the time travelling `redux-devtools`. An action must have\r\n   * a `type` property which may not be `undefined`. It is a good idea to use\r\n   * string constants for action types.\r\n   *\r\n   * @returns For convenience, the same action object you dispatched.\r\n   *\r\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\r\n   * return something else (for example, a Promise you can await).\r\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\r\n   * Replaces the reducer currently used by the store to calculate the state.\r\n   *\r\n   * You might need this if your app implements code splitting and you want to\r\n   * load some of the reducers dynamically. You might also need this if you\r\n   * implement a hot reloading mechanism for Redux.\r\n   *\r\n   * @param nextReducer The reducer for the store to use instead.\r\n   * @returns The same store instance with a new reducer in place.\r\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    } // TODO: do this more elegantly\n    currentReducer = nextReducer; // This action has a similar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes$1.REPLACE\n    }); // change the type of the store by casting it to the new store\n\n    return store;\n  }\n  /**\r\n   * Interoperability point for observable/reactive libraries.\r\n   * @returns A minimal observable of state changes.\r\n   * For more information, see the observable proposal:\r\n   * https://github.com/tc39/proposal-observable\r\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\r\n       * The minimal observable subscription method.\r\n       * @param observer Any object that can be used as an observer.\r\n       * The observer object should have a `next` method.\r\n       * @returns An object with an `unsubscribe` method that can\r\n       * be used to unsubscribe the observable from the store, and prevent further\r\n       * emission of values from the observable.\r\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          var observerAsObserver = observer;\n\n          if (observerAsObserver.next) {\n            observerAsObserver.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable$1] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes$1.INIT\n  });\n  var store = (_store = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _store[$$observable$1] = observable, _store);\n  return store;\n}\n\n/**\r\n * Prints a warning in the console if it exists.\r\n *\r\n * @param message The warning message.\r\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes$1.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes$1.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes$1.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes$1.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes$1.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return dispatch(actionCreator.apply(this, args));\n  };\n}\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    // infer the argument type so it is usable in inference down the line\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState) {\n      var store = createStore(reducer, preloadedState);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          return _dispatch.apply(void 0, [action].concat(args));\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n// functions\n/*\r\n * This is a dummy function to check if the function name has been altered by minification.\r\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\r\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/configuration/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes$1 as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n"]},"metadata":{},"sourceType":"module"}