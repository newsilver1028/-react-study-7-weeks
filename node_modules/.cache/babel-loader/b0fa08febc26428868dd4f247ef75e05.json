{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nexport const initialState = {\n  foodData: {\n    minimum_order_price: 0,\n    merchant_name: \"\",\n    items: [],\n    discounts: []\n  },\n  clickedFood: {},\n  totalPrice: 0,\n  isOverMinimum: false\n};\nexport const cartReducer = createSlice({\n  name: 'cartReducer',\n  initialState: initialState,\n  reducers: {\n    STORE: (state, action) => {\n      state.foodData = action.payload;\n    },\n    ADD: state => {\n      return state;\n    },\n    DELETE: state => {\n      return state;\n    },\n    INCREASE: state => {\n      return state;\n    },\n    DECREASE: state => {\n      return state;\n    }\n  }\n});\nexport const {\n  STORE,\n  ADD,\n  DELETE,\n  INCREASE,\n  DECREASE\n} = cartReducer.actions;\nexport const getFoodList = createAsyncThunk(\"GET\", async () => {\n  const response = await axios.get(\"https://us-central1-react-baemin.cloudfunctions.net/merchantInfo\");\n  return response.data;\n});","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Reducers/cartReducer.ts"],"names":["createSlice","createAsyncThunk","axios","initialState","foodData","minimum_order_price","merchant_name","items","discounts","clickedFood","totalPrice","isOverMinimum","cartReducer","name","reducers","STORE","state","action","payload","ADD","DELETE","INCREASE","DECREASE","actions","getFoodList","response","get","data"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AA8BA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,mBAAmB,EAAE,CADb;AAERC,IAAAA,aAAa,EAAE,EAFP;AAGRC,IAAAA,KAAK,EAAE,EAHC;AAIRC,IAAAA,SAAS,EAAE;AAJH,GADgB;AAO1BC,EAAAA,WAAW,EAAE,EAPa;AAQ1BC,EAAAA,UAAU,EAAE,CARc;AAS1BC,EAAAA,aAAa,EAAE;AATW,CAArB;AAYP,OAAO,MAAMC,WAAW,GAAGZ,WAAW,CAAC;AACrCa,EAAAA,IAAI,EAAE,aAD+B;AAErCV,EAAAA,YAAY,EAAEA,YAFuB;AAGrCW,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA4C;AACjDD,MAAAA,KAAK,CAACZ,QAAN,GAAiBa,MAAM,CAACC,OAAxB;AACD,KAHO;AAIRC,IAAAA,GAAG,EAAGH,KAAD,IAAW;AACd,aAAOA,KAAP;AACD,KANO;AAORI,IAAAA,MAAM,EAAGJ,KAAD,IAAW;AACjB,aAAOA,KAAP;AACD,KATO;AAURK,IAAAA,QAAQ,EAAGL,KAAD,IAAW;AACnB,aAAOA,KAAP;AACD,KAZO;AAaRM,IAAAA,QAAQ,EAAGN,KAAD,IAAW;AACnB,aAAOA,KAAP;AACD;AAfO;AAH2B,CAAD,CAA/B;AAsBP,OAAO,MAAM;AAAED,EAAAA,KAAF;AAASI,EAAAA,GAAT;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA,QAAtB;AAAgCC,EAAAA;AAAhC,IAA6CV,WAAW,CAACW,OAA/D;AAEP,OAAO,MAAMC,WAAW,GAAGvB,gBAAgB,CAAC,KAAD,EAAQ,YAAY;AAC3D,QAAMwB,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAU,kEAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAHwC,CAApC","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\n\nexport interface Data {\n  foodData: FoodData;\n  clickedFood?: object;\n  totalPrice?: number;\n  isOverMinimum?: boolean;\n}\n\nexport interface FoodData {\n  minimum_order_price: number;\n  merchant_name: string;\n  items: Items[];\n  discounts: Discounts[];\n}\n\nexport interface Items {\n  id: string;\n  category_id: string;\n  category_name: string;\n  name: string;\n  price: number;\n}\n\nexport interface Discounts {\n  id: string;\n  name: string;\n  discount_rate: number;\n}\n\nexport const initialState = {\n  foodData: {\n    minimum_order_price: 0,\n    merchant_name: \"\",\n    items: [],\n    discounts: []\n  },\n  clickedFood: {},\n  totalPrice: 0,\n  isOverMinimum: false,\n}\n\nexport const cartReducer = createSlice({\n  name: 'cartReducer',\n  initialState: initialState as Data,\n  reducers: {\n    STORE: (state, action: PayloadAction<FoodData>) => {\n      state.foodData = action.payload;\n    },\n    ADD: (state) => {\n      return state;\n    },\n    DELETE: (state) => {\n      return state;\n    },\n    INCREASE: (state) => {\n      return state;\n    },\n    DECREASE: (state) => {\n      return state;\n    }\n  }\n});\n\nexport const { STORE, ADD, DELETE, INCREASE, DECREASE } = cartReducer.actions;\n\nexport const getFoodList = createAsyncThunk(\"GET\", async () => {\n    const response = await axios.get(\"https://us-central1-react-baemin.cloudfunctions.net/merchantInfo\");\n    return response.data;\n  });\n"]},"metadata":{},"sourceType":"module"}