{"ast":null,"code":"var _jsxFileName = \"/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { initialState } from '../Reducers/cartReducer';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FoodList() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(initialState.foodData); // const { foodData } = useSelector((store: RootState) => store.cartReducer);\n  // console.log(foodList);\n\n  const dispatch = useDispatch();\n\n  const onStore = () => {\n    dispatch(cartReducer.actions.STORE(data));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(\"https://us-central1-react-baemin.cloudfunctions.net/merchantInfo\"); // .then(response => onStore(response.data))\n        // console.log(response);\n        // setData(response.data);\n\n        onStore();\n      } catch (error) {\n        console.log(error);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []); // onStore(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n\n_s(FoodList, \"xDGgusjUYAbZptdLy0HxqdeyrRU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FoodList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodList\");","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodList.tsx"],"names":["useState","useEffect","axios","useDispatch","initialState","cartReducer","FoodList","loading","setLoading","data","setData","foodData","dispatch","onStore","actions","STORE","fetchData","response","get","error","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAA2CC,YAA3C,QAA+D,yBAA/D;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACI,YAAY,CAACO,QAAd,CAAhC,CAFiC,CAIjC;AACA;;AAEA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AACA,QAAMU,OAAO,GAAG,MAAM;AACpBD,IAAAA,QAAQ,CAACP,WAAW,CAACS,OAAZ,CAAoBC,KAApB,CAA0BN,IAA1B,CAAD,CAAR;AACD,GAFD;;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,SAAS,GAAG,YAAY;AAC5B,UAAI;AACFR,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMS,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,kEAAV,CAAvB,CAFE,CAGF;AACA;AACA;;AACAL,QAAAA,OAAO;AACR,OAPD,CAOE,OAAOM,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACDX,MAAAA,UAAU,CAAC,KAAD,CAAV;AAED,KAbD;;AAcAQ,IAAAA,SAAS;AACV,GAhBQ,EAgBP,EAhBO,CAAT,CAZiC,CA8BjC;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAjCuBV,Q;UAOLH,W;;;KAPKG,Q","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { STORE, ADD, DELETE, INCREASE, DECREASE } from '../Reducers/cartReducer';\nimport { Data, FoodData, Discounts, Items, initialState } from '../Reducers/cartReducer';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { RootState } from '../Reducers';\n\nexport default function FoodList() {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [data, setData] = useState(initialState.foodData);\n\n  // const { foodData } = useSelector((store: RootState) => store.cartReducer);\n  // console.log(foodList);\n\n  const dispatch = useDispatch();\n  const onStore = () => {\n    dispatch(cartReducer.actions.STORE(data));\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(\"https://us-central1-react-baemin.cloudfunctions.net/merchantInfo\")\n        // .then(response => onStore(response.data))\n        // console.log(response);\n        // setData(response.data);\n        onStore();\n      } catch (error) {\n        console.log(error)\n      }\n      setLoading(false);\n      \n    }\n    fetchData();\n  },[]);\n\n  // onStore(data);\n\n  return <div>test</div>;\n}\n"]},"metadata":{},"sourceType":"module"}