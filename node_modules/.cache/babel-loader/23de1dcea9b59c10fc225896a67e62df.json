{"ast":null,"code":"var _jsxFileName = \"/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodsCategories.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport FoodsType from './FoodsType';\nimport { foodDataReducer } from '../Reducers/foodDataReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FoodsCategories() {\n  _s();\n\n  const {\n    foodData\n  } = useSelector(store => store.foodDataReducer);\n  const {\n    sortedFoodData\n  } = useSelector(store => store.foodDataReducer);\n  const foodItems = foodData.items;\n  const foodItemsNameArray = foodItems.map(item => {\n    return item.category_name;\n  });\n  const FOODS_TYPES = Array.from(new Set([...foodItemsNameArray]));\n  const SORTED_FOODS = FOODS_TYPES.map(type => {\n    const FOODS_LIST = foodItems.filter(item => item.category_name === type);\n    return [type, FOODS_LIST];\n  });\n  const dispatch = useDispatch();\n  dispatch(foodDataReducer.actions.STORE());\n  console.log(sortedFoodData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FoodsType, {\n      list: SORTED_FOODS\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(FoodsCategories, \"VuCC6iNa/PYRdTfklGP9NtrT6KI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = FoodsCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodsCategories\");","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodsCategories.tsx"],"names":["useSelector","useDispatch","FoodsType","foodDataReducer","FoodsCategories","foodData","store","sortedFoodData","foodItems","items","foodItemsNameArray","map","item","category_name","FOODS_TYPES","Array","from","Set","SORTED_FOODS","type","FOODS_LIST","filter","dispatch","actions","STORE","console","log"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,eAAT,QAAgC,6BAAhC;;;AAGA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAeL,WAAW,CAAEM,KAAD,IAAsBA,KAAK,CAACH,eAA7B,CAAhC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAqBP,WAAW,CAAEM,KAAD,IAAsBA,KAAK,CAACH,eAA7B,CAAtC;AACA,QAAMK,SAAS,GAAGH,QAAQ,CAACI,KAA3B;AACA,QAAMC,kBAAkB,GAAIF,SAAS,CAACG,GAAV,CAAeC,IAAD,IAAwB;AAChE,WAAOA,IAAI,CAACC,aAAZ;AACD,GAF2B,CAA5B;AAGA,QAAMC,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQ,CAAC,GAAGP,kBAAJ,CAAR,CAAX,CAApB;AAEA,QAAMQ,YAAY,GAAGJ,WAAW,CAACH,GAAZ,CAAiBQ,IAAD,IAAmC;AACtE,UAAMC,UAAU,GAAEZ,SAAS,CAACa,MAAV,CAAkBT,IAAD,IAAiBA,IAAI,CAACC,aAAL,KAAuBM,IAAzD,CAAlB;AACA,WAAO,CAACA,IAAD,EAAMC,UAAN,CAAP;AACD,GAHoB,CAArB;AAIA,QAAME,QAAQ,GAAGrB,WAAW,EAA5B;AACAqB,EAAAA,QAAQ,CAACnB,eAAe,CAACoB,OAAhB,CAAwBC,KAAxB,EAAD,CAAR;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYnB,cAAZ;AAGA,sBACE;AAAA,2BACA,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEW;AAAjB;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAKD;;GAxBuBd,e;UACDJ,W,EACMA,W,EAWVC,W;;;KAbKG,e","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\nimport { Items } from '../Reducers/cartReducer';\nimport { RootState } from '../Reducers';\nimport FoodsType from './FoodsType';\nimport { foodDataReducer } from '../Reducers/foodDataReducer';\n\n\nexport default function FoodsCategories() {\n  const { foodData } = useSelector((store: RootState) => store.foodDataReducer);\n  const { sortedFoodData } = useSelector((store: RootState) => store.foodDataReducer);\n  const foodItems = foodData.items;\n  const foodItemsNameArray  = foodItems.map((item: Items) :string=> {\n    return item.category_name;\n  });\n  const FOODS_TYPES = Array.from(new Set([...foodItemsNameArray]));\n\n  const SORTED_FOODS = FOODS_TYPES.map((type:string) : [string,Items[]]=> {\n    const FOODS_LIST= foodItems.filter((item: Items) => item.category_name === type) \n    return [type,FOODS_LIST];\n  });\n  const dispatch = useDispatch();\n  dispatch(foodDataReducer.actions.STORE());\n\n  console.log(sortedFoodData)\n\n\n  return (\n    <>\n    <FoodsType list={SORTED_FOODS} />\n    </>\n  )\n}\n\nexport type FoodsTypeProps = [string, Items[]];\n"]},"metadata":{},"sourceType":"module"}