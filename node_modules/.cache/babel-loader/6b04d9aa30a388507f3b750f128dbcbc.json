{"ast":null,"code":"var _jsxFileName = \"/Users/newsilver/Project/react-study-7-weeks/src/Components/CartList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport CartFood from './CartFood';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CartList() {\n  _s();\n\n  const {\n    cartData\n  } = useSelector(store => store.cartReducer);\n  const storedFoods = cartData.storedFoods;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"======= cart list =======\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: storedFoods.map(food => {\n        const name = food.name;\n        const price = food.price; // 1000단위 마다 ,를 붙여야 함\n\n        const quantitiy = food.quantitiy;\n        return /*#__PURE__*/_jsxDEV(CartFood, {\n          name: name,\n          price: price,\n          quantitiy: quantitiy\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CartList, \"DCzMxoFk0kLqa7RHyLJBT8N2Csc=\", false, function () {\n  return [useSelector];\n});\n\n_c = CartList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartList\");","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/CartList.tsx"],"names":["useSelector","CartFood","CartList","cartData","store","cartReducer","storedFoods","map","food","name","price","quantitiy"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAKA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAeH,WAAW,CAAEI,KAAD,IAAsBA,KAAK,CAACC,WAA7B,CAAhC;AACA,QAAMC,WAAW,GAAGH,QAAQ,CAACG,WAA7B;AAEA,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,gBACEA,WAAW,CAACC,GAAZ,CAAiBC,IAAD,IAAoD;AAClE,cAAMC,IAAI,GAAGD,IAAI,CAACC,IAAlB;AACA,cAAMC,KAAK,GAAGF,IAAI,CAACE,KAAnB,CAFkE,CAExC;;AAC1B,cAAMC,SAAS,GAAGH,IAAI,CAACG,SAAvB;AACA,4BAAO,QAAC,QAAD;AAAqB,UAAA,IAAI,EAAEF,IAA3B;AAAiC,UAAA,KAAK,EAAEC,KAAxC;AAA+C,UAAA,SAAS,EAAEC;AAA1D,WAAeF,IAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OALD;AADF;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAaD;;GAjBuBP,Q;UACDF,W;;;KADCE,Q","sourcesContent":["import { useSelector } from 'react-redux';\n\nimport { ReactElement } from 'react';\nimport { CartData, StoredFoods, Items, initialState } from '../Reducers/cartReducer';\nimport { RootState } from '../Reducers';\nimport CartFood from './CartFood';\n\nexport default function CartList() {\n  const { cartData } = useSelector((store: RootState) => store.cartReducer);\n  const storedFoods = cartData.storedFoods;\n\n  return (\n    <>\n    <div>======= cart list =======</div>\n    <div>{\n      storedFoods.map((food: StoredFoods): ReactElement<CartFoodProps> => {\n        const name = food.name;\n        const price = food.price; // 1000단위 마다 ,를 붙여야 함\n        const quantitiy = food.quantitiy;\n        return <CartFood key={name} name={name} price={price} quantitiy={quantitiy}/>\n      })\n      }</div>\n    </>\n  )\n}\n\nexport interface CartFoodProps {\n  name: string;\n  price: number;\n}\n"]},"metadata":{},"sourceType":"module"}