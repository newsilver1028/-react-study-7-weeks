{"ast":null,"code":"var _jsxFileName = \"/Users/newsilver/Project/react-study-7-weeks/src/Components/Foods.tsx\";\nimport Food from './Food';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Foods(props) {\n  // const dispatch = useDispatch();\n  const foodsList = props.foodsList; // const { cartData } = useSelector((store: RootState) => store.cartReducer);\n  // const storedFoods = cartData.storedFoods;\n  // const onAdd = (target: string) => {\n  //   dispatch(cartReducer.actions.ADD(target));\n  //   dispatch(cartReducer.actions.UPDATE());\n  //   dispatch(discountReducer.actions.ADD(storedFoods));\n  // } \n  // function addCartClickHandler(event: React.MouseEventHandler<HTMLDivElement>): void {\n  //   const target = event.target.id;\n  //   const isOverlapped = storedFoods.filter((item: Items) => item.name === target).length !== 0;\n  //   if (isOverlapped) {\n  //     alert(\"이미 장바구니에 등록된 상품입니다.\");\n  //     return;\n  //   }\n  //   onAdd(target);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: foodsList.map(food => {\n      const {\n        name,\n        price,\n        ..._\n      } = food;\n      return /*#__PURE__*/_jsxDEV(Food, {\n        name: name,\n        price: price\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = Foods;\n\nvar _c;\n\n$RefreshReg$(_c, \"Foods\");","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/Foods.tsx"],"names":["Food","Foods","props","foodsList","map","food","name","price","_"],"mappings":";AAMA,OAAOA,IAAP,MAAiB,QAAjB;;AAGA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAA8C;AAC3D;AACA,QAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB,CAF2D,CAG3D;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,cACGA,SAAS,CAACC,GAAV,CAAeC,IAAD,IAA0C;AACvD,YAAM;AAACC,QAAAA,IAAD;AAAOC,QAAAA,KAAP;AAAc,WAAGC;AAAjB,UAAsBH,IAA5B;AACA,0BAAO,QAAC,IAAD;AAAiB,QAAA,IAAI,EAAEC,IAAvB;AAA6B,QAAA,KAAK,EAAEC;AAApC,SAAWD,IAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;KA9BuBL,K","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { ReactElement } from 'react';\n\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { RootState } from '../Reducers';\nimport { Items } from '../Reducers/cartReducer';\nimport Food from './Food';\nimport { discountReducer } from '../Reducers/discountReducer';\n\nexport default function Foods(props: { foodsList: Items[] }) {\n  // const dispatch = useDispatch();\n  const foodsList = props.foodsList;\n  // const { cartData } = useSelector((store: RootState) => store.cartReducer);\n  // const storedFoods = cartData.storedFoods;\n\n  // const onAdd = (target: string) => {\n  //   dispatch(cartReducer.actions.ADD(target));\n  //   dispatch(cartReducer.actions.UPDATE());\n  //   dispatch(discountReducer.actions.ADD(storedFoods));\n  // } \n\n  // function addCartClickHandler(event: React.MouseEventHandler<HTMLDivElement>): void {\n  //   const target = event.target.id;\n  //   const isOverlapped = storedFoods.filter((item: Items) => item.name === target).length !== 0;\n  //   if (isOverlapped) {\n  //     alert(\"이미 장바구니에 등록된 상품입니다.\");\n  //     return;\n  //   }\n  //   onAdd(target);\n  // }\n  \n  return (\n    <div>\n      {foodsList.map((food: Items): ReactElement<FoodProps> => {\n        const {name, price, ..._} = food;\n        return <Food key={name} name={name} price={price} />\n      })}\n    </div>\n  )\n}\n\nexport interface FoodProps {\n  name: string;\n  price: number;\n}\n"]},"metadata":{},"sourceType":"module"}