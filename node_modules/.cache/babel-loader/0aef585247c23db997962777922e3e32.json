{"ast":null,"code":"var _jsxFileName = \"/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodsList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { discountReducer } from '../Reducers/discountReducer';\nimport { foodDataReducer } from '../Reducers/foodDataReducer';\nimport { fetchFoodData } from '../Async/fetchFoodData';\nimport { useAppThunkDispatch } from '..';\nimport CartPageBox from './CartPageBox';\nimport { Heading, Flex, Text, Badge, Box } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FoodsList() {\n  _s();\n\n  const [isOpen, setIsopen] = useState(false);\n  const dispatch = useDispatch();\n  const thunkDispatch = useAppThunkDispatch();\n  const {\n    foodData\n  } = useSelector(store => store.foodDataReducer);\n  const {\n    count\n  } = useSelector(store => store.cartReducer);\n\n  const onOpen = () => {\n    setIsopen(true);\n  };\n\n  const getFoodData = () => {\n    thunkDispatch(fetchFoodData()).unwrap().then(data => {\n      dispatch(cartReducer.actions.STORE(data));\n      dispatch(foodDataReducer.actions.STORE());\n    }).catch(reject => {\n      console.log(reject);\n    });\n  };\n\n  const getDiscountsData = () => {\n    thunkDispatch(fetchFoodData()).unwrap().then(data => {\n      dispatch(discountReducer.actions.STORE(data));\n    }).catch(reject => {\n      console.log(reject);\n    });\n  };\n\n  useEffect(() => {\n    getDiscountsData();\n    getFoodData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"baseline\",\n      justifyContent: \"space-between\",\n      padding: \"10px\",\n      bg: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h1\",\n        size: \"xl\",\n        bg: \"white\",\n        children: foodData.merchant_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          fontWeight: \"bold\",\n          onClick: onOpen,\n          children: \"Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Badge, {\n          colorScheme: \"facebook\",\n          ml: \"1\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(CartPageBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodsList, \"RYWT0lUWhzElnEvCOHWySleg1oo=\", false, function () {\n  return [useDispatch, useAppThunkDispatch, useSelector, useSelector];\n});\n\n_c = FoodsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodsList\");","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodsList.tsx"],"names":["useSelector","useDispatch","useEffect","useState","cartReducer","discountReducer","foodDataReducer","fetchFoodData","useAppThunkDispatch","CartPageBox","Heading","Flex","Text","Badge","Box","FoodsList","isOpen","setIsopen","dispatch","thunkDispatch","foodData","store","count","onOpen","getFoodData","unwrap","then","data","actions","STORE","catch","reject","console","log","getDiscountsData","merchant_name"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { RootState } from '../Reducers';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { discountReducer } from '../Reducers/discountReducer';\nimport { foodDataReducer } from '../Reducers/foodDataReducer';\nimport { fetchFoodData } from '../Async/fetchFoodData';\nimport { useAppThunkDispatch } from '..';\nimport CartPageBox from './CartPageBox';\n\nimport { Heading, Flex, Text, Badge, Box } from '@chakra-ui/react';\n\nexport default function FoodsList() {\n  const [isOpen, setIsopen] = useState(false);\n  const dispatch = useDispatch();\n  const thunkDispatch = useAppThunkDispatch();\n  const { foodData } = useSelector((store: RootState) => store.foodDataReducer);\n  const { count } = useSelector((store: RootState) => store.cartReducer);\n\n  const onOpen = () => {\n    setIsopen(true);\n  }\n\n  const getFoodData = () => {\n    thunkDispatch(fetchFoodData())\n    .unwrap()\n    .then((data) => {\n      dispatch(cartReducer.actions.STORE(data));\n      dispatch(foodDataReducer.actions.STORE());\n    })\n    .catch((reject) => {\n      console.log(reject);\n    })\n  }\n\n  const getDiscountsData = () => {\n    thunkDispatch(fetchFoodData())\n    .unwrap()\n    .then((data) => {\n      dispatch(discountReducer.actions.STORE(data));\n    })\n    .catch((reject) => {\n      console.log(reject);\n    })\n  }\n\n  useEffect(()=> {\n    getDiscountsData();\n    getFoodData();\n  },[]);\n\n  return (\n    <Box>\n      <Flex \n      alignItems=\"baseline\" \n      justifyContent=\"space-between\"\n      padding=\"10px\"\n      bg=\"white\">\n        <Heading as=\"h1\" size=\"xl\" bg=\"white\">{foodData.merchant_name}</Heading>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"lg\" fontWeight=\"bold\" onClick={onOpen}>Cart</Text>\n          <Badge colorScheme=\"facebook\" ml=\"1\">{count}</Badge>\n        </Flex>\n      </Flex>\n    {isOpen && <CartPageBox />}\n    </Box>\n  );\n}"]},"metadata":{},"sourceType":"module"}