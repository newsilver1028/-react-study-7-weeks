{"ast":null,"code":"var _jsxFileName = \"/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodsList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { cartReducer } from '../Reducers/cartReducer';\n// get discountsData\nimport { discountReducer } from '../Reducers/discountReducer'; // thunk \n\nimport { fetchFoodData } from '../Async/fetchFoodData';\nimport { foodDataReducer } from '../Reducers/foodDataReducer';\nimport { useAppThunkDispatch } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FoodsList() {\n  _s();\n\n  const dispatch = useDispatch();\n  const thunkDispatch = useAppThunkDispatch();\n  const {\n    foodData\n  } = useSelector(store => store.foodDataReducer);\n  const {\n    count\n  } = useSelector(store => store.cartReducer);\n  const {\n    discounts\n  } = useSelector(store => store.discountReducer);\n\n  const onStore = data => {\n    dispatch(foodDataReducer.actions.STORE(data));\n    dispatch(cartReducer.actions.STORE(data));\n    dispatch(discountReducer.actions.STORE(data.discounts));\n  };\n\n  const getFoodData = async () => {\n    // thunkDispatch(fetchFoodData())\n    // .unwrap()\n    // .then((data) => {\n    //   onStore(data);\n    //   console.log(\"data\",data)\n    //   // dispatch(discountReducer.actions.STORE(data.discounts)); \n    // })\n    // .catch((reject) => {\n    //   console.log(reject);\n    // })\n    try {\n      const result = await thunkDispatch(fetchFoodData());\n      const result2 = unwrapResult(result);\n      onStore(result2);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // useEffect(()=> {\n\n\n  getFoodData(); // },[]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: foodData.merchant_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Cart \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FoodsList, \"DmuhKVZF87e2vUzW8Sf3tw56P0o=\", false, function () {\n  return [useDispatch, useAppThunkDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = FoodsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodsList\");","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodsList.tsx"],"names":["useSelector","useDispatch","unwrapResult","cartReducer","discountReducer","fetchFoodData","foodDataReducer","useAppThunkDispatch","FoodsList","dispatch","thunkDispatch","foodData","store","count","discounts","onStore","data","actions","STORE","getFoodData","result","result2","error","console","log","merchant_name"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAGA,SAASC,WAAT,QAA4B,yBAA5B;AAGA;AACA,SAASC,eAAT,QAAgC,6BAAhC,C,CAEA;;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AAEA,SAASC,mBAAT,QAAoC,IAApC;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,aAAa,GAAGH,mBAAmB,EAAzC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAeX,WAAW,CAAEY,KAAD,IAAsBA,KAAK,CAACN,eAA7B,CAAhC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAYb,WAAW,CAAEY,KAAD,IAAsBA,KAAK,CAACT,WAA7B,CAA7B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAgBd,WAAW,CAAEY,KAAD,IAAsBA,KAAK,CAACR,eAA7B,CAAjC;;AAEA,QAAMW,OAAO,GAAIC,IAAD,IAAoB;AAClCP,IAAAA,QAAQ,CAACH,eAAe,CAACW,OAAhB,CAAwBC,KAAxB,CAA8BF,IAA9B,CAAD,CAAR;AACAP,IAAAA,QAAQ,CAACN,WAAW,CAACc,OAAZ,CAAoBC,KAApB,CAA0BF,IAA1B,CAAD,CAAR;AAEAP,IAAAA,QAAQ,CAACL,eAAe,CAACa,OAAhB,CAAwBC,KAAxB,CAA8BF,IAAI,CAACF,SAAnC,CAAD,CAAR;AACD,GALD;;AAOA,QAAMK,WAAW,GAAG,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMV,aAAa,CAACL,aAAa,EAAd,CAAlC;AACA,YAAMgB,OAAO,GAAGnB,YAAY,CAACkB,MAAD,CAA5B;AACAL,MAAAA,OAAO,CAACM,OAAD,CAAP;AACD,KAJD,CAIE,OAAMC,KAAN,EAAa;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAlBD,CAdkC,CAkClC;;;AACEH,EAAAA,WAAW,GAnCqB,CAoClC;;AAEA,sBACE;AAAA,4BACA;AAAA,gBAAMR,QAAQ,CAACc;AAAf;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,0BAAWZ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAMD;;GA5CuBL,S;UACLP,W,EACKM,mB,EACDP,W,EACHA,W,EACIA,W;;;KALAQ,S","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { unwrapResult } from '@reduxjs/toolkit'\n\nimport { Data, FoodData, Discounts, Items, initialState } from '../Reducers/cartReducer';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { RootState } from '../Reducers';\n\n// get discountsData\nimport { discountReducer } from '../Reducers/discountReducer';\n\n// thunk \nimport { fetchFoodData } from '../Async/fetchFoodData';\nimport { foodDataReducer } from '../Reducers/foodDataReducer';\nimport { useEffect } from 'react';\nimport { useAppThunkDispatch } from '..';\n\nexport default function FoodsList() {\n  const dispatch = useDispatch();\n  const thunkDispatch = useAppThunkDispatch();\n  const { foodData } = useSelector((store: RootState) => store.foodDataReducer);\n  const { count } = useSelector((store: RootState) => store.cartReducer);\n  const { discounts } = useSelector((store: RootState) => store.discountReducer);\n  \n  const onStore = (data: FoodData) => {\n    dispatch(foodDataReducer.actions.STORE(data));\n    dispatch(cartReducer.actions.STORE(data));\n\n    dispatch(discountReducer.actions.STORE(data.discounts));    \n  }\n\n  const getFoodData = async () => {\n    // thunkDispatch(fetchFoodData())\n    // .unwrap()\n    // .then((data) => {\n    //   onStore(data);\n    //   console.log(\"data\",data)\n    //   // dispatch(discountReducer.actions.STORE(data.discounts)); \n    // })\n    // .catch((reject) => {\n    //   console.log(reject);\n    // })\n    try {\n      const result = await thunkDispatch(fetchFoodData())\n      const result2 = unwrapResult(result);\n      onStore(result2);\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n  // useEffect(()=> {\n    getFoodData();\n  // },[]);\n\n  return (\n    <>\n    <div>{foodData.merchant_name}</div>\n    <div>Cart {count}</div>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}