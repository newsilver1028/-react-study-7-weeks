{"ast":null,"code":"var _jsxFileName = \"/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { initialState } from '../Reducers/cartReducer';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FoodList() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(initialState.foodData);\n  const {\n    foodData\n  } = useSelector(store => store.cartReducer);\n  console.log(foodData);\n  const dispatch = useDispatch();\n\n  const onStore = data => {\n    dispatch(cartReducer.actions.STORE(data));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(\"https://us-central1-react-baemin.cloudfunctions.net/merchantInfo\");\n        setData(response.data);\n        onStore(data); // setData(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData(); // console.log(data);\n  }, []); // onStore(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n\n_s(FoodList, \"TTLMTV1hqN+h8Caubb0XluAWPkc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FoodList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodList\");","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodList.tsx"],"names":["useState","useEffect","axios","useSelector","useDispatch","initialState","cartReducer","FoodList","loading","setLoading","data","setData","foodData","store","console","log","dispatch","onStore","actions","STORE","fetchData","response","get","error"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAA2CC,YAA3C,QAA4E,yBAA5E;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAWK,YAAY,CAACO,QAAxB,CAAhC;AAEA,QAAM;AAAEA,IAAAA;AAAF,MAAeT,WAAW,CAAEU,KAAD,IAAsBA,KAAK,CAACP,WAA7B,CAAhC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,QAAMI,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,QAAMa,OAAO,GAAIP,IAAD,IAAoB;AAClCM,IAAAA,QAAQ,CAACV,WAAW,CAACY,OAAZ,CAAoBC,KAApB,CAA0BT,IAA1B,CAAD,CAAR;AACD,GAFD;;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,SAAS,GAAG,YAAY;AAC5B,UAAI;AACFX,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMY,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,kEAAV,CAAvB;AACAX,QAAAA,OAAO,CAACU,QAAQ,CAACX,IAAV,CAAP;AACAO,QAAAA,OAAO,CAACP,IAAD,CAAP,CAJE,CAMF;AACD,OAPD,CAOE,OAAOa,KAAP,EAAc;AACdT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD;;AACDd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAZD;;AAaAW,IAAAA,SAAS,GAdK,CAed;AACD,GAhBQ,EAgBP,EAhBO,CAAT,CAbiC,CA+BjC;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAlCuBb,Q;UAIDJ,W,EAGJC,W;;;KAPKG,Q","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { STORE, ADD, DELETE, INCREASE, DECREASE } from '../Reducers/cartReducer';\nimport { Data, FoodData, Discounts, Items, initialState, getFoodList } from '../Reducers/cartReducer';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { RootState } from '../Reducers';\n\nexport default function FoodList() {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [data, setData] = useState<FoodData>(initialState.foodData);\n\n  const { foodData } = useSelector((store: RootState) => store.cartReducer);\n  console.log(foodData);\n\n  const dispatch = useDispatch();\n  const onStore = (data: FoodData) => {\n    dispatch(cartReducer.actions.STORE(data));\n  }\n\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(\"https://us-central1-react-baemin.cloudfunctions.net/merchantInfo\");\n        setData(response.data);\n        onStore(data);\n        \n        // setData(response.data);\n      } catch (error) {\n        console.log(error)\n      }\n      setLoading(false);\n    }\n    fetchData();\n    // console.log(data);\n  },[]);\n\n  // onStore(data);\n\n  return <div>test</div>;\n}\n"]},"metadata":{},"sourceType":"module"}