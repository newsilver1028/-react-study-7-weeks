{"ast":null,"code":"var _jsxFileName = \"/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { STORE } from '../Reducers/cartReducer';\nimport { initialState } from '../Reducers/cartReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FoodList() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(initialState.foodData);\n  const foodList = useSelector(store => store.cartReducer);\n  console.log(foodList);\n  const dispatch = useDispatch();\n\n  const onStore = data => {\n    dispatch(STORE(data));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(\"https://us-central1-react-baemin.cloudfunctions.net/merchantInfo\");\n        await onStore(response.data);\n        setData(response.data);\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []); // console.log(data);\n  // onStore(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n\n_s(FoodList, \"MxNwwsmcfwAaU6J1lF29NIOFBOc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FoodList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodList\");","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodList.tsx"],"names":["useState","useEffect","axios","useSelector","useDispatch","STORE","initialState","FoodList","loading","setLoading","data","setData","foodData","foodList","store","cartReducer","console","log","dispatch","onStore","fetchData","response","get","error"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,QAAuD,yBAAvD;AACA,SAA2CC,YAA3C,QAA+D,yBAA/D;;AAIA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAWM,YAAY,CAACM,QAAxB,CAAhC;AAEA,QAAMC,QAAQ,GAAGV,WAAW,CAAEW,KAAD,IAAsBA,KAAK,CAACC,WAA7B,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAEA,QAAMK,QAAQ,GAAGd,WAAW,EAA5B;;AACA,QAAMe,OAAO,GAAIT,IAAD,IAAoB;AAClCQ,IAAAA,QAAQ,CAACb,KAAK,CAACK,IAAD,CAAN,CAAR;AACD,GAFD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,SAAS,GAAG,YAAY;AAC5B,UAAI;AACFX,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMY,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,kEAAV,CAAvB;AACA,cAAMH,OAAO,CAACE,QAAQ,CAACX,IAAV,CAAb;AACAC,QAAAA,OAAO,CAACU,QAAQ,CAACX,IAAV,CAAP;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD,OAND,CAME,OAAOa,KAAP,EAAc;AACdP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD;;AACDd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAXD;;AAYAW,IAAAA,SAAS;AACV,GAdQ,EAcP,EAdO,CAAT,CAZiC,CA4BjC;AACA;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAhCuBb,Q;UAILJ,W,EAGAC,W;;;KAPKG,Q","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { STORE, ADD, DELETE, INCREASE, DECREASE } from '../Reducers/cartReducer';\nimport { Data, FoodData, Discounts, Items, initialState } from '../Reducers/cartReducer';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { RootState } from '../Reducers';\n\nexport default function FoodList() {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [data, setData] = useState<FoodData>(initialState.foodData);\n\n  const foodList = useSelector((store: RootState) => store.cartReducer)\n  console.log(foodList);\n\n  const dispatch = useDispatch();\n  const onStore = (data: FoodData) => {\n    dispatch(STORE(data));\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(\"https://us-central1-react-baemin.cloudfunctions.net/merchantInfo\");\n        await onStore(response.data);\n        setData(response.data);\n        console.log(data);\n      } catch (error) {\n        console.log(error)\n      }\n      setLoading(false);\n    }\n    fetchData();\n  },[]);\n\n  // console.log(data);\n  // onStore(data);\n\n  return <div>test</div>;\n}\n"]},"metadata":{},"sourceType":"module"}