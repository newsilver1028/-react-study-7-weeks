{"ast":null,"code":"import _slicedToArray from\"/Users/newsilver/Project/react-study-7-weeks/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useDispatch,useSelector}from'react-redux';import{useEffect,useState}from'react';import{discountReducer}from'../Reducers/discountReducer';import{Text,Box,Checkbox,Flex}from'@chakra-ui/react';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function DiscountMenu(props){var name=props.name,quantity=props.quantity,excludedPrices=props.excludedPrices;var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isChecked=_useState2[0],setIsChecked=_useState2[1];var _useSelector=useSelector(function(store){return store.cartReducer;}),storedFoods=_useSelector.storedFoods;var onSelect=function onSelect(name){dispatch(discountReducer.actions.SELECT_MENU(name));};function menuCheckboxToggleHandler(event){onSelect(name);var checked=event.target.checked;if(!checked){setIsChecked(false);return;}setIsChecked(true);}useEffect(function(){dispatch(discountReducer.actions.COMPUTE_PRICE());},[storedFoods]);return/*#__PURE__*/_jsx(Box,{marginY:\"20px\",children:/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",children:/*#__PURE__*/_jsx(Checkbox,{id:name,isChecked:isChecked,onChange:menuCheckboxToggleHandler,children:/*#__PURE__*/_jsxs(Box,{marginX:\"15px\",children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"lg\",fontWeight:\"semibold\",children:[name,\" X \",quantity]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"red\",children:[\"- \\u20A9\",excludedPrices]})]})})})},name);}","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/DiscountMenu.tsx"],"names":["useDispatch","useSelector","useEffect","useState","discountReducer","Text","Box","Checkbox","Flex","DiscountMenu","props","name","quantity","excludedPrices","dispatch","isChecked","setIsChecked","store","cartReducer","storedFoods","onSelect","actions","SELECT_MENU","menuCheckboxToggleHandler","event","checked","target","COMPUTE_PRICE"],"mappings":"kIAAA,OAASA,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,OAASC,eAAT,KAAgC,6BAAhC,CAEA,OAASC,IAAT,CAAeC,GAAf,CAAoBC,QAApB,CAA8BC,IAA9B,KAA0C,kBAA1C,C,wFAGA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAAuF,CACpG,GAAOC,CAAAA,IAAP,CAAyCD,KAAzC,CAAOC,IAAP,CAAaC,QAAb,CAAyCF,KAAzC,CAAaE,QAAb,CAAuBC,cAAvB,CAAyCH,KAAzC,CAAuBG,cAAvB,CACA,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CACA,cAAkCG,QAAQ,CAAC,KAAD,CAA1C,wCAAOY,SAAP,eAAkBC,YAAlB,eACA,iBAAwBf,WAAW,CAAC,SAACgB,KAAD,QAAsBA,CAAAA,KAAK,CAACC,WAA5B,EAAD,CAAnC,CAAQC,WAAR,cAAQA,WAAR,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACT,IAAD,CAAwB,CACvCG,QAAQ,CAACV,eAAe,CAACiB,OAAhB,CAAwBC,WAAxB,CAAoCX,IAApC,CAAD,CAAR,CACD,CAFD,CAIA,QAASY,CAAAA,yBAAT,CAAmCC,KAAnC,CAA+C,CAC7CJ,QAAQ,CAACT,IAAD,CAAR,CACA,GAAMc,CAAAA,OAAO,CAAGD,KAAK,CAACE,MAAN,CAAaD,OAA7B,CACA,GAAG,CAACA,OAAJ,CAAa,CACXT,YAAY,CAAC,KAAD,CAAZ,CACA,OACD,CACDA,YAAY,CAAC,IAAD,CAAZ,CACD,CAEDd,SAAS,CAAC,UAAM,CACdY,QAAQ,CAACV,eAAe,CAACiB,OAAhB,CAAwBM,aAAxB,EAAD,CAAR,CACD,CAFQ,CAEP,CAACR,WAAD,CAFO,CAAT,CAIA,mBACE,KAAC,GAAD,EAAgB,OAAO,CAAC,MAAxB,uBACE,KAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,uBACE,KAAC,QAAD,EAAU,EAAE,CAAER,IAAd,CAAoB,SAAS,CAAEI,SAA/B,CAA0C,QAAQ,CAAEQ,yBAApD,uBACA,MAAC,GAAD,EAAK,OAAO,CAAC,MAAb,wBACE,MAAC,IAAD,EAAM,QAAQ,CAAC,IAAf,CAAoB,UAAU,CAAC,UAA/B,WAA2CZ,IAA3C,OAAoDC,QAApD,GADF,cAEE,MAAC,IAAD,EAAM,QAAQ,CAAC,IAAf,CAAoB,KAAK,CAAC,KAA1B,sBAAoCC,cAApC,GAFF,GADA,EADF,EADF,EAAUF,IAAV,CADF,CAYD","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { discountReducer } from '../Reducers/discountReducer';\n\nimport { Text, Box, Checkbox, Flex } from '@chakra-ui/react';\nimport { RootState } from '../Reducers';\n\nexport default function DiscountMenu(props: {name: string, quantity: number, excludedPrices: number}) {\n  const {name, quantity, excludedPrices} = props;\n  const dispatch = useDispatch();\n  const [isChecked, setIsChecked] = useState(false);\n  const { storedFoods } = useSelector((store: RootState) => store.cartReducer)\n\n  const onSelect = (name: string): void => {\n    dispatch(discountReducer.actions.SELECT_MENU(name));\n  }\n\n  function menuCheckboxToggleHandler(event: any) {\n    onSelect(name);\n    const checked = event.target.checked;\n    if(!checked) {\n      setIsChecked(false);\n      return;\n    }\n    setIsChecked(true); \n  }\n\n  useEffect(() => {\n    dispatch(discountReducer.actions.COMPUTE_PRICE());\n  },[storedFoods])\n  \n  return (\n    <Box key={name} marginY=\"20px\">\n      <Flex alignItems=\"center\">\n        <Checkbox id={name} isChecked={isChecked} onChange={menuCheckboxToggleHandler}> \n        <Box marginX=\"15px\">\n          <Text fontSize=\"lg\" fontWeight=\"semibold\">{name} X {quantity}</Text>\n          <Text fontSize=\"sm\" color=\"red\">- â‚©{excludedPrices}</Text>\n        </Box>\n        </Checkbox>\n        </Flex>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}