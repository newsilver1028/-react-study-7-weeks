{"ast":null,"code":"var _jsxFileName = \"/Users/newsilver/Project/react-study-7-weeks/src/Components/CartList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport CartFood from './CartFood';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CartList() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    clickedFoods\n  } = useSelector(store => store.cartReducer);\n  const {\n    discounts\n  } = useSelector(store => store.cartReducer);\n  const {\n    count\n  } = useSelector(store => store.cartReducer);\n\n  const onIncrease = () => {\n    dispatch(cartReducer.actions.INCREASE());\n  };\n\n  const onDecrease = () => {\n    dispatch(cartReducer.actions.DECREASE());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"cart list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: clickedFoods.map(food => {\n        const name = food.name;\n        const price = food.price; // 1000단위 마다 ,를 붙여야 함\n\n        return /*#__PURE__*/_jsxDEV(CartFood, {\n          name: name,\n          price: price,\n          onIncrease: onIncrease,\n          onDecrease: onDecrease\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CartList, \"IQL9/clvHQuprIxyXtwPmEcP36A=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = CartList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartList\");","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/CartList.tsx"],"names":["useSelector","useDispatch","cartReducer","CartFood","CartList","dispatch","clickedFoods","store","discounts","count","onIncrease","actions","INCREASE","onDecrease","DECREASE","map","food","name","price"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAmBN,WAAW,CAAEO,KAAD,IAAsBA,KAAK,CAACL,WAA7B,CAApC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAgBR,WAAW,CAAEO,KAAD,IAAsBA,KAAK,CAACL,WAA7B,CAAjC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAYT,WAAW,CAAEO,KAAD,IAAsBA,KAAK,CAACL,WAA7B,CAA7B;;AAEA,QAAMQ,UAAU,GAAG,MAAM;AACvBL,IAAAA,QAAQ,CAACH,WAAW,CAACS,OAAZ,CAAoBC,QAApB,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBR,IAAAA,QAAQ,CAACH,WAAW,CAACS,OAAZ,CAAoBG,QAApB,EAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,gBACER,YAAY,CAACS,GAAb,CAAkBC,IAAD,IAA8C;AAC7D,cAAMC,IAAI,GAAGD,IAAI,CAACC,IAAlB;AACA,cAAMC,KAAK,GAAGF,IAAI,CAACE,KAAnB,CAF6D,CAEnC;;AAC1B,4BAAO,QAAC,QAAD;AACP,UAAA,IAAI,EAAED,IADC;AAEP,UAAA,KAAK,EAAEC,KAFA;AAGP,UAAA,UAAU,EAAER,UAHL;AAIP,UAAA,UAAU,EAAEG;AAJL,WAAeI,IAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AAMD,OATD;AADF;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAiBD;;GA/BuBb,Q;UACLH,W,EACQD,W,EACHA,W,EACJA,W;;;KAJII,Q","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\nimport { ReactElement } from 'react';\nimport { Data, FoodData, Discounts, Items, initialState } from '../Reducers/cartReducer';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { RootState } from '../Reducers';\nimport CartFood from './CartFood';\n\nexport default function CartList() {\n  const dispatch = useDispatch();\n  const { clickedFoods } = useSelector((store: RootState) => store.cartReducer);\n  const { discounts } = useSelector((store: RootState) => store.cartReducer);\n  const { count } = useSelector((store: RootState) => store.cartReducer);\n\n  const onIncrease = () => {\n    dispatch(cartReducer.actions.INCREASE());\n  } \n\n  const onDecrease = () => {\n    dispatch(cartReducer.actions.DECREASE());\n  }\n\n  return (\n    <>\n    <div>cart list</div>\n    <div>{\n      clickedFoods.map((food: Items): ReactElement<CartFoodProps> => {\n        const name = food.name;\n        const price = food.price; // 1000단위 마다 ,를 붙여야 함\n        return <CartFood key={name} \n        name={name} \n        price={price} \n        onIncrease={onIncrease}\n        onDecrease={onDecrease}\n        />\n      })\n      }</div>\n    </>\n  )\n}\n\nexport interface CartFoodProps {\n  name: string;\n  price: number;\n}\n"]},"metadata":{},"sourceType":"module"}