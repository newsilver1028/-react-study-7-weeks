{"ast":null,"code":"var _jsxFileName = \"/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodsList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FoodsList() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const {\n    foodData\n  } = useSelector(store => store.cartReducer);\n  const {\n    count\n  } = useSelector(store => store.cartReducer); // console.log(foodData);\n\n  const onStore = data => {\n    dispatch(cartReducer.actions.STORE(data));\n  };\n\n  const onUpdate = () => {\n    dispatch(cartReducer.actions.UPDATE());\n  };\n\n  const fetchData = async () => {\n    if (!loading) {\n      const response = await axios.get(\"https://us-central1-react-baemin.cloudfunctions.net/merchantInfo\");\n      return response.data;\n    }\n\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    fetchData().then(res => {\n      onStore(res);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: foodData.merchant_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Cart \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FoodsList, \"GTVw9g1fy1fbacEjFwDqHhnrfdE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = FoodsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodsList\");","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodsList.tsx"],"names":["useState","useEffect","axios","useSelector","useDispatch","cartReducer","FoodsList","dispatch","loading","setLoading","foodData","store","count","onStore","data","actions","STORE","onUpdate","UPDATE","fetchData","response","get","then","res","merchant_name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,SAASC,WAAT,QAA4B,yBAA5B;;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAU,KAAV,CAAtC;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAeP,WAAW,CAAEQ,KAAD,IAAsBA,KAAK,CAACN,WAA7B,CAAhC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAYT,WAAW,CAAEQ,KAAD,IAAsBA,KAAK,CAACN,WAA7B,CAA7B,CALkC,CAMlC;;AAEA,QAAMQ,OAAO,GAAIC,IAAD,IAAoB;AAClCP,IAAAA,QAAQ,CAACF,WAAW,CAACU,OAAZ,CAAoBC,KAApB,CAA0BF,IAA1B,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMG,QAAQ,GAAG,MAAM;AACrBV,IAAAA,QAAQ,CAACF,WAAW,CAACU,OAAZ,CAAoBG,MAApB,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,YAAY;AAC5B,QAAI,CAACX,OAAL,EAAc;AACZ,YAAMY,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,kEAAV,CAAvB;AACA,aAAOD,QAAQ,CAACN,IAAhB;AACD;;AACDL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAND;;AAQAR,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,SAAS,GACRG,IADD,CACOC,GAAD,IAAS;AAACV,MAAAA,OAAO,CAACU,GAAD,CAAP;AAAa,KAD7B;AAED,GAHQ,EAGP,EAHO,CAAT;AAKA,sBACE;AAAA,4BACA;AAAA,gBAAMb,QAAQ,CAACc;AAAf;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,0BAAWZ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAMD;;GAnCuBN,S;UACLF,W,EAGID,W,EACHA,W;;;KALIG,S","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Data, FoodData, Discounts, Items, initialState } from '../Reducers/cartReducer';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { RootState } from '../Reducers';\n\nexport default function FoodsList() {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const { foodData } = useSelector((store: RootState) => store.cartReducer);\n  const { count } = useSelector((store: RootState) => store.cartReducer);\n  // console.log(foodData);\n\n  const onStore = (data: FoodData) => {\n    dispatch(cartReducer.actions.STORE(data));\n  }\n\n  const onUpdate = () => {\n    dispatch(cartReducer.actions.UPDATE());\n  }\n\n  const fetchData = async () => {\n    if (!loading) {\n      const response = await axios.get(\"https://us-central1-react-baemin.cloudfunctions.net/merchantInfo\")\n      return response.data;\n    }\n    setLoading(true);\n  }\n\n  useEffect(() => {\n    fetchData()\n    .then((res) => {onStore(res)});\n  },[]);\n\n  return (\n    <>\n    <div>{foodData.merchant_name}</div>\n    <div>Cart {count}</div>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}