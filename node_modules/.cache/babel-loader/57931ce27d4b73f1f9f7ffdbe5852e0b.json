{"ast":null,"code":"import{useSelector,useDispatch}from'react-redux';import{useContext,useEffect}from'react';import{cartReducer}from'../Reducers/cartReducer';import{discountReducer}from'../Reducers/discountReducer';import{foodDataReducer}from'../Reducers/foodDataReducer';import{fetchFoodData}from'../Async/fetchFoodData';import{useAppThunkDispatch}from'..';import{Heading,Flex,Text,Badge,Box}from'@chakra-ui/react';import{OpenCartContext}from'./Context/OpenCartContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function FoodsList(){var _useContext=useContext(OpenCartContext),isOpen=_useContext.isOpen,onOpen=_useContext.onOpen;var dispatch=useDispatch();var thunkDispatch=useAppThunkDispatch();var _useSelector=useSelector(function(store){return store.foodDataReducer;}),foodData=_useSelector.foodData;var _useSelector2=useSelector(function(store){return store.cartReducer;}),count=_useSelector2.count;var getFoodData=function getFoodData(){thunkDispatch(fetchFoodData()).unwrap().then(function(data){dispatch(cartReducer.actions.STORE(data));dispatch(foodDataReducer.actions.STORE());}).catch(function(reject){console.log(reject);});};var getDiscountsData=function getDiscountsData(){thunkDispatch(fetchFoodData()).unwrap().then(function(data){dispatch(discountReducer.actions.STORE(data));}).catch(function(reject){console.log(reject);});};useEffect(function(){getDiscountsData();getFoodData();},[]);return/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"baseline\",justifyContent:\"space-between\",padding:\"10px\",bg:\"white\",children:[/*#__PURE__*/_jsx(Heading,{as:\"h1\",size:\"xl\",bg:\"white\",children:foodData.merchant_name}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",onClick:onOpen,cursor:\"pointer\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",fontWeight:\"bold\",children:\"Cart\"}),/*#__PURE__*/_jsx(Badge,{colorScheme:\"facebook\",ml:\"1\",children:count})]})]})});}","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodsList.tsx"],"names":["useSelector","useDispatch","useContext","useEffect","cartReducer","discountReducer","foodDataReducer","fetchFoodData","useAppThunkDispatch","Heading","Flex","Text","Badge","Box","OpenCartContext","FoodsList","isOpen","onOpen","dispatch","thunkDispatch","store","foodData","count","getFoodData","unwrap","then","data","actions","STORE","catch","reject","console","log","getDiscountsData","merchant_name"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,OAAtC,CAGA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAASC,eAAT,KAAgC,6BAAhC,CACA,OAASC,eAAT,KAAgC,6BAAhC,CACA,OAASC,aAAT,KAA8B,wBAA9B,CACA,OAASC,mBAAT,KAAoC,IAApC,CAEA,OAASC,OAAT,CAAkBC,IAAlB,CAAwBC,IAAxB,CAA8BC,KAA9B,CAAqCC,GAArC,KAAgD,kBAAhD,CACA,OAASC,eAAT,KAAgC,2BAAhC,C,wFAEA,cAAe,SAASC,CAAAA,SAAT,EAAqB,CAClC,gBAAyBb,UAAU,CAACY,eAAD,CAAnC,CAAOE,MAAP,aAAOA,MAAP,CAAeC,MAAf,aAAeA,MAAf,CACA,GAAMC,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CACA,GAAMkB,CAAAA,aAAa,CAAGX,mBAAmB,EAAzC,CACA,iBAAqBR,WAAW,CAAC,SAACoB,KAAD,QAAsBA,CAAAA,KAAK,CAACd,eAA5B,EAAD,CAAhC,CAAQe,QAAR,cAAQA,QAAR,CACA,kBAAkBrB,WAAW,CAAC,SAACoB,KAAD,QAAsBA,CAAAA,KAAK,CAAChB,WAA5B,EAAD,CAA7B,CAAQkB,KAAR,eAAQA,KAAR,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBJ,aAAa,CAACZ,aAAa,EAAd,CAAb,CACCiB,MADD,GAECC,IAFD,CAEM,SAACC,IAAD,CAAU,CACdR,QAAQ,CAACd,WAAW,CAACuB,OAAZ,CAAoBC,KAApB,CAA0BF,IAA1B,CAAD,CAAR,CACAR,QAAQ,CAACZ,eAAe,CAACqB,OAAhB,CAAwBC,KAAxB,EAAD,CAAR,CACD,CALD,EAMCC,KAND,CAMO,SAACC,MAAD,CAAY,CACjBC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACD,CARD,EASD,CAVD,CAYA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7Bd,aAAa,CAACZ,aAAa,EAAd,CAAb,CACCiB,MADD,GAECC,IAFD,CAEM,SAACC,IAAD,CAAU,CACdR,QAAQ,CAACb,eAAe,CAACsB,OAAhB,CAAwBC,KAAxB,CAA8BF,IAA9B,CAAD,CAAR,CACD,CAJD,EAKCG,KALD,CAKO,SAACC,MAAD,CAAY,CACjBC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACD,CAPD,EAQD,CATD,CAWA3B,SAAS,CAAC,UAAK,CACb8B,gBAAgB,GAChBV,WAAW,GACZ,CAHQ,CAGP,EAHO,CAAT,CAKA,mBACE,KAAC,GAAD,wBACE,MAAC,IAAD,EACA,UAAU,CAAC,UADX,CAEA,cAAc,CAAC,eAFf,CAGA,OAAO,CAAC,MAHR,CAIA,EAAE,CAAC,OAJH,wBAKE,KAAC,OAAD,EAAS,EAAE,CAAC,IAAZ,CAAiB,IAAI,CAAC,IAAtB,CAA2B,EAAE,CAAC,OAA9B,UAAuCF,QAAQ,CAACa,aAAhD,EALF,cAME,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,OAAO,CAAEjB,MAAnC,CAA2C,MAAM,CAAC,SAAlD,wBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,IAAf,CAAoB,UAAU,CAAC,MAA/B,kBADF,cAEE,KAAC,KAAD,EAAO,WAAW,CAAC,UAAnB,CAA8B,EAAE,CAAC,GAAjC,UAAsCK,KAAtC,EAFF,GANF,GADF,EADF,CAeD","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { useContext, useEffect } from 'react';\n\nimport { RootState } from '../Reducers';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { discountReducer } from '../Reducers/discountReducer';\nimport { foodDataReducer } from '../Reducers/foodDataReducer';\nimport { fetchFoodData } from '../Async/fetchFoodData';\nimport { useAppThunkDispatch } from '..';\n\nimport { Heading, Flex, Text, Badge, Box } from '@chakra-ui/react';\nimport { OpenCartContext } from './Context/OpenCartContext';\n\nexport default function FoodsList() {\n  const {isOpen, onOpen} = useContext(OpenCartContext);\n  const dispatch = useDispatch();\n  const thunkDispatch = useAppThunkDispatch();\n  const { foodData } = useSelector((store: RootState) => store.foodDataReducer);\n  const { count } = useSelector((store: RootState) => store.cartReducer);\n\n  const getFoodData = () => {\n    thunkDispatch(fetchFoodData())\n    .unwrap()\n    .then((data) => {\n      dispatch(cartReducer.actions.STORE(data));\n      dispatch(foodDataReducer.actions.STORE());\n    })\n    .catch((reject) => {\n      console.log(reject);\n    })\n  }\n\n  const getDiscountsData = () => {\n    thunkDispatch(fetchFoodData())\n    .unwrap()\n    .then((data) => {\n      dispatch(discountReducer.actions.STORE(data));\n    })\n    .catch((reject) => {\n      console.log(reject);\n    })\n  }\n\n  useEffect(()=> {\n    getDiscountsData();\n    getFoodData();\n  },[]);\n\n  return (\n    <Box>\n      <Flex \n      alignItems=\"baseline\" \n      justifyContent=\"space-between\"\n      padding=\"10px\"\n      bg=\"white\">\n        <Heading as=\"h1\" size=\"xl\" bg=\"white\">{foodData.merchant_name}</Heading>\n        <Flex alignItems=\"center\" onClick={onOpen} cursor=\"pointer\">\n          <Text fontSize=\"lg\" fontWeight=\"bold\">Cart</Text>\n          <Badge colorScheme=\"facebook\" ml=\"1\">{count}</Badge>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n}"]},"metadata":{},"sourceType":"module"}