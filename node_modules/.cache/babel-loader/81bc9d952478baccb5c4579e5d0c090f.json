{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  discounts: [],\n  totalPrice: 0\n};\n\nfunction getDiscountedPrice(price, rate) {\n  return Math.floor((100 - rate) * 0.01 * price);\n}\n\nfunction getExcludedPrice(totalPrice, discountedPrice) {\n  return Math.floor(totalPrice - discountedPrice);\n}\n\nexport const discountReducer = createSlice({\n  name: 'discountReducer',\n  initialState: initialState,\n  reducers: {\n    STORE: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.discounts = payload.map(discount => {\n        return { ...discount,\n          discountedMenu: [],\n          discountedPrices: 0\n        };\n      });\n    },\n    UPDATE: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n\n      if (state.discounts.length === 0) {\n        return;\n      }\n\n      state.discounts.forEach(discount => {\n        payload.forEach(food => {\n          const discountedPrice = getDiscountedPrice(food.priceTimesQuantity, discount.discount_rate);\n          const excludedPrice = getExcludedPrice(food.priceTimesQuantity, discountedPrice);\n          const menuObject = {\n            name: food.name,\n            discountedPrice: discountedPrice,\n            excludedPrice: excludedPrice\n          };\n          discount.discountedMenu.push(menuObject);\n          discount.discountedPrices += discountedPrice;\n        });\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Reducers/discountReducer.ts"],"names":["createSlice","initialState","discounts","totalPrice","getDiscountedPrice","price","rate","Math","floor","getExcludedPrice","discountedPrice","discountReducer","name","reducers","STORE","state","payload","map","discount","discountedMenu","discountedPrices","UPDATE","length","forEach","food","priceTimesQuantity","discount_rate","excludedPrice","menuObject","push"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAuBA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,EADe;AAE1BC,EAAAA,UAAU,EAAE;AAFc,CAArB;;AAKP,SAASC,kBAAT,CAA4BC,KAA5B,EAA2CC,IAA3C,EAAiE;AAC/D,SAAOC,IAAI,CAACC,KAAL,CAAW,CAAC,MAAMF,IAAP,IAAe,IAAf,GAAsBD,KAAjC,CAAP;AACD;;AAED,SAASI,gBAAT,CAA0BN,UAA1B,EAA8CO,eAA9C,EAA+E;AAC7E,SAAOH,IAAI,CAACC,KAAL,CAAWL,UAAU,GAAGO,eAAxB,CAAP;AACD;;AAED,OAAO,MAAMC,eAAe,GAAGX,WAAW,CAAC;AACzCY,EAAAA,IAAI,EAAE,iBADmC;AAEzCX,EAAAA,YAAY,EAAEA,YAF2B;AAGzCY,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,CAACC,KAAD,WAAoD;AAAA,UAA5C;AAAEC,QAAAA;AAAF,OAA4C;AACzDD,MAAAA,KAAK,CAACb,SAAN,GAAkBc,OAAO,CAACC,GAAR,CAAYC,QAAQ,IAAI;AACxC,eAAO,EACL,GAAGA,QADE;AAELC,UAAAA,cAAc,EAAE,EAFX;AAGLC,UAAAA,gBAAgB,EAAE;AAHb,SAAP;AAKD,OANiB,CAAlB;AAOD,KATO;AAURC,IAAAA,MAAM,EAAE,CAACN,KAAD,YAAsD;AAAA,UAA9C;AAAEC,QAAAA;AAAF,OAA8C;;AAC5D,UAAGD,KAAK,CAACb,SAAN,CAAgBoB,MAAhB,KAA2B,CAA9B,EAAgC;AAC9B;AACD;;AACDP,MAAAA,KAAK,CAACb,SAAN,CAAgBqB,OAAhB,CAAyBL,QAAD,IAAc;AACpCF,QAAAA,OAAO,CAACO,OAAR,CAAiBC,IAAD,IAAU;AACxB,gBAAMd,eAAe,GAAGN,kBAAkB,CAACoB,IAAI,CAACC,kBAAN,EAAyBP,QAAQ,CAACQ,aAAlC,CAA1C;AACA,gBAAMC,aAAa,GAAGlB,gBAAgB,CAACe,IAAI,CAACC,kBAAN,EAA0Bf,eAA1B,CAAtC;AACA,gBAAMkB,UAAU,GAAG;AACjBhB,YAAAA,IAAI,EAAEY,IAAI,CAACZ,IADM;AAEjBF,YAAAA,eAAe,EAAEA,eAFA;AAGjBiB,YAAAA,aAAa,EAAEA;AAHE,WAAnB;AAKAT,UAAAA,QAAQ,CAACC,cAAT,CAAyBU,IAAzB,CAA8BD,UAA9B;AACAV,UAAAA,QAAQ,CAACE,gBAAT,IAA8BV,eAA9B;AACD,SAVD;AAWD,OAZD;AAaD;AA3BO;AAH+B,CAAD,CAAnC","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { CartData, StoredFoods } from './cartReducer';\n\nexport interface DiscountsData {\n  discounts: Discounts[];\n  totalPrice?: number;\n}\n\nexport interface Discounts {\n  id: string;\n  name: string;\n  discount_rate: number;\n  discountedMenu?: DiscountedMenu[];\n  discountedPrices?: number;\n}\n\nexport interface DiscountedMenu {\n  name: string;\n  discountedPrice: number;\n  excludedPrice: number;\n}\n\nexport const initialState = {\n  discounts: [],\n  totalPrice: 0,\n}\n\nfunction getDiscountedPrice(price: number, rate: number): number {\n  return Math.floor((100 - rate) * 0.01 * price);\n}\n\nfunction getExcludedPrice(totalPrice: number, discountedPrice: number): number {\n  return Math.floor(totalPrice - discountedPrice);\n}\n\nexport const discountReducer = createSlice({\n  name: 'discountReducer',\n  initialState: initialState as DiscountsData,\n  reducers: {\n    STORE: (state, { payload }: PayloadAction<Discounts[]>) => {\n      state.discounts = payload.map(discount => {\n        return {\n          ...discount,\n          discountedMenu: [],\n          discountedPrices: 0\n        }\n      })\n    },\n    UPDATE: (state, { payload }: PayloadAction<StoredFoods[]>) => {\n      if(state.discounts.length === 0){\n        return;\n      }\n      state.discounts.forEach((discount) => {\n        payload.forEach((food) => {\n          const discountedPrice = getDiscountedPrice(food.priceTimesQuantity,discount.discount_rate);\n          const excludedPrice = getExcludedPrice(food.priceTimesQuantity, discountedPrice);\n          const menuObject = {\n            name: food.name,\n            discountedPrice: discountedPrice,\n            excludedPrice: excludedPrice\n          }          \n          discount.discountedMenu!.push(menuObject);\n          discount.discountedPrices! += discountedPrice;\n        })\n      })\n    }\n  },\n});\n"]},"metadata":{},"sourceType":"module"}