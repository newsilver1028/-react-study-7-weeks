{"ast":null,"code":"var _jsxFileName = \"/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodsList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cartReducer } from '../Reducers/cartReducer';\n// get discountsData\nimport { discountReducer } from '../Reducers/discountReducer'; // thunk \n\nimport { fetchFoodData } from '../Async/fetchFoodData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FoodsList() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    foodData\n  } = useSelector(store => store.foodDataReducer);\n  const {\n    count\n  } = useSelector(store => store.cartReducer);\n\n  const onStore = data => {\n    // dispatch(fetchFoodData());\n    dispatch(cartReducer.actions.STORE(data)); // get discountsData\n\n    dispatch(discountReducer.actions.STORE(data.discounts));\n  };\n\n  const getFoodData = async () => {\n    try {\n      await dispatch(fetchFoodData());\n      await onStore(foodData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  getFoodData(); // onStore(foodData);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: foodData.merchant_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Cart \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FoodsList, \"3l/8rSLCffCLvw3xVZtNNC5Jv68=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = FoodsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodsList\");","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Components/FoodsList.tsx"],"names":["useSelector","useDispatch","cartReducer","discountReducer","fetchFoodData","FoodsList","dispatch","foodData","store","foodDataReducer","count","onStore","data","actions","STORE","discounts","getFoodData","error","console","log","merchant_name"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,SAASC,WAAT,QAA4B,yBAA5B;AAGA;AACA,SAASC,eAAT,QAAgC,6BAAhC,C,CAEA;;AACA,SAASC,aAAT,QAA8B,wBAA9B;;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAeP,WAAW,CAAEQ,KAAD,IAAsBA,KAAK,CAACC,eAA7B,CAAhC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYV,WAAW,CAAEQ,KAAD,IAAsBA,KAAK,CAACN,WAA7B,CAA7B;;AAEA,QAAMS,OAAO,GAAIC,IAAD,IAAoB;AAClC;AACAN,IAAAA,QAAQ,CAACJ,WAAW,CAACW,OAAZ,CAAoBC,KAApB,CAA0BF,IAA1B,CAAD,CAAR,CAFkC,CAGlC;;AACAN,IAAAA,QAAQ,CAACH,eAAe,CAACU,OAAhB,CAAwBC,KAAxB,CAA8BF,IAAI,CAACG,SAAnC,CAAD,CAAR;AACD,GALD;;AAOA,QAAMC,WAAW,GAAG,YAAY;AAC9B,QAAG;AACH,YAAMV,QAAQ,CAACF,aAAa,EAAd,CAAd;AACA,YAAMO,OAAO,CAACJ,QAAD,CAAb;AAEC,KAJD,CAIE,OAAMU,KAAN,EAAa;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GARD;;AAUAD,EAAAA,WAAW,GAtBuB,CAuBlC;;AAEA,sBACE;AAAA,4BACA;AAAA,gBAAMT,QAAQ,CAACa;AAAf;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,0BAAWV,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAMD;;GA/BuBL,S;UACLJ,W,EACID,W,EACHA,W;;;KAHIK,S","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\nimport { Data, FoodData, Discounts, Items, initialState } from '../Reducers/cartReducer';\nimport { cartReducer } from '../Reducers/cartReducer';\nimport { RootState } from '../Reducers';\n\n// get discountsData\nimport { discountReducer } from '../Reducers/discountReducer';\n\n// thunk \nimport { fetchFoodData } from '../Async/fetchFoodData';\nimport { unwrapResult } from '@reduxjs/toolkit';\n\nexport default function FoodsList() {\n  const dispatch = useDispatch();\n  const { foodData } = useSelector((store: RootState) => store.foodDataReducer);\n  const { count } = useSelector((store: RootState) => store.cartReducer);\n\n  const onStore = (data: FoodData) => {\n    // dispatch(fetchFoodData());\n    dispatch(cartReducer.actions.STORE(data));\n    // get discountsData\n    dispatch(discountReducer.actions.STORE(data.discounts));\n  }\n\n  const getFoodData = async () => {\n    try{\n    await dispatch(fetchFoodData());\n    await onStore(foodData);\n\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n  getFoodData();\n  // onStore(foodData);\n\n  return (\n    <>\n    <div>{foodData.merchant_name}</div>\n    <div>Cart {count}</div>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}