{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  discounts: [],\n  totalPrices: 0,\n  excludedPrices: 0,\n  storedFoods: []\n};\nexport const discountReducer = createSlice({\n  name: 'discountReducer',\n  initialState: initialState,\n  reducers: {\n    STORE: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const data = payload.discounts;\n      state.discounts = data.map(discount => {\n        return { ...discount,\n          discountedMenu: [],\n          excludedPrices: 0,\n          totalPrices: 0,\n          isSelected: true\n        };\n      });\n    },\n    UPDATE: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.storedFoods = payload;\n      state.discounts = state.discounts.map(discount => {\n        discount.discountedMenu = payload.map(food => {\n          const discountedPrice = getDiscountedPrice(food.priceTimesQuantity, discount.discount_rate);\n          const excludedPrice = getExcludedPrice(food.priceTimesQuantity, discountedPrice);\n          return {\n            name: food.name,\n            quantity: food.quantity,\n            prices: food.priceTimesQuantity,\n            discountedPrices: discountedPrice,\n            excludedPrices: excludedPrice,\n            totalPrices: 0\n          };\n        });\n        return discount;\n      });\n    },\n    ADD: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.storedFoods = payload;\n      state.discounts = state.discounts.map(discount => {\n        payload.forEach(food => {\n          const discountedPrice = getDiscountedPrice(food.priceTimesQuantity, discount.discount_rate);\n          const excludedPrice = getExcludedPrice(food.priceTimesQuantity, discountedPrice);\n          const menuObject = {\n            name: food.name,\n            discountedPrices: discountedPrice,\n            excludedPrices: excludedPrice\n          };\n          discount.discountedMenu.push(menuObject);\n        });\n        return discount;\n      });\n    },\n    SELECT_DISCOUNTS: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.discounts.map(discount => {\n        if (discount.name === payload) {\n          discount.isSelected = !discount.isSelected;\n        }\n\n        return discount;\n      });\n    },\n    SELECT_MENU: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.discounts.map(discount => {\n        discount.discountedPrices = 0;\n        discount.discountedMenu.map(menu => {\n          if (menu.name === payload) {\n            menu.isSelected = !menu.isSelected;\n          }\n        });\n      });\n    },\n    COMPUTE_PRICE: state => {\n      state.discounts = state.discounts.map(discount => {\n        // discount.totalPrices = discount.discountedMenu!.reduce(((prev,current) => prev + current.prices!),0);\n        discount.discountedMenu = discount.discountedMenu.map(menu => {\n          discount.totalPrices += menu.prices;\n\n          if (menu.isSelected) {\n            discount.excludedPrices += menu.excludedPrices;\n          }\n\n          return menu;\n        });\n\n        if (discount.isSelected) {\n          state.totalPrices -= discount.excludedPrices;\n        }\n\n        return discount;\n      });\n    }\n  }\n});\n\nfunction getDiscountedPrice(price, rate) {\n  return Math.floor((100 - rate) * 0.01 * price);\n}\n\nfunction getExcludedPrice(totalPrice, discountedPrice) {\n  return Math.floor(totalPrice - discountedPrice);\n}","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Reducers/discountReducer.ts"],"names":["createSlice","initialState","discounts","totalPrices","excludedPrices","storedFoods","discountReducer","name","reducers","STORE","state","payload","data","map","discount","discountedMenu","isSelected","UPDATE","food","discountedPrice","getDiscountedPrice","priceTimesQuantity","discount_rate","excludedPrice","getExcludedPrice","quantity","prices","discountedPrices","ADD","forEach","menuObject","push","SELECT_DISCOUNTS","SELECT_MENU","menu","COMPUTE_PRICE","price","rate","Math","floor","totalPrice"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { DiscountsData, Discounts } from '../Interface/discountInterface'\nimport { FoodData, StoredFoods } from '../Interface/cartInterface';\n\nexport const initialState = {\n  discounts: [],\n  totalPrices: 0,\n  excludedPrices: 0,\n  storedFoods: []\n}\n\nexport const discountReducer = createSlice({\n  name: 'discountReducer',\n  initialState: initialState as DiscountsData,\n  reducers: {\n    STORE: (state, { payload }: PayloadAction<FoodData>) => {\n      const data = payload.discounts;\n      state.discounts = data.map((discount: Discounts) => {\n        return {\n          ...discount,\n          discountedMenu: [],\n          excludedPrices: 0,\n          totalPrices:0,\n          isSelected: true\n        }\n      })\n    },\n    UPDATE: (state, { payload }: PayloadAction<StoredFoods[]>) => {\n      state.storedFoods = payload;\n      state.discounts = state.discounts.map((discount) => {\n        discount.discountedMenu = payload.map(food => {\n          const discountedPrice = getDiscountedPrice(food.priceTimesQuantity,discount.discount_rate);\n          const excludedPrice = getExcludedPrice(food.priceTimesQuantity, discountedPrice);\n          return {\n            name: food.name,\n            quantity: food.quantity,\n            prices: food.priceTimesQuantity,\n            discountedPrices: discountedPrice,\n            excludedPrices: excludedPrice,\n            totalPrices: 0\n          }\n        });\n        return discount;\n      })\n    },\n    ADD: (state, { payload }: PayloadAction<StoredFoods[]>) => {\n      state.storedFoods = payload;\n      state.discounts = state.discounts.map((discount) => {\n        payload.forEach((food) => {\n          const discountedPrice = getDiscountedPrice(food.priceTimesQuantity,discount.discount_rate);\n          const excludedPrice = getExcludedPrice(food.priceTimesQuantity, discountedPrice);\n          const menuObject = {\n            name: food.name,\n            discountedPrices: discountedPrice,\n            excludedPrices: excludedPrice\n          }\n          discount.discountedMenu!.push(menuObject);   \n        });\n        return discount;\n      })\n    },\n    SELECT_DISCOUNTS: (state, { payload }: PayloadAction<string>) => {\n      state.discounts.map((discount) => {\n        if(discount.name === payload) {\n          discount.isSelected = !discount.isSelected;\n        }\n        return discount;\n      });\n    },\n    SELECT_MENU: (state, { payload }: PayloadAction<string>) => {\n      state.discounts.map((discount) => {\n        discount.discountedPrices= 0;\n        discount.discountedMenu!.map((menu) => {\n          if(menu.name === payload) {\n            menu.isSelected = !menu.isSelected;\n          }\n        })\n      })\n    },\n    COMPUTE_PRICE: (state) => {\n      state.discounts = state.discounts.map((discount) => {\n        // discount.totalPrices = discount.discountedMenu!.reduce(((prev,current) => prev + current.prices!),0);\n        discount.discountedMenu! = discount.discountedMenu!.map((menu) => {\n          discount.totalPrices! += menu.prices!;\n          if(menu.isSelected) {\n            discount.excludedPrices! += menu.excludedPrices;\n          }\n          return menu;\n        });\n        if(discount.isSelected) {\n          state.totalPrices! -= discount.excludedPrices!;\n        }\n        return discount;\n      });\n    }\n  }\n});\n\nfunction getDiscountedPrice(price: number, rate: number): number {\n  return Math.floor((100 - rate) * 0.01 * price);\n}\n\nfunction getExcludedPrice(totalPrice: number, discountedPrice: number): number {\n  return Math.floor(totalPrice - discountedPrice);\n}\n"]},"metadata":{},"sourceType":"module"}