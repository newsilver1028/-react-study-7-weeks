{"ast":null,"code":"import _toConsumableArray from\"/Users/newsilver/Project/react-study-7-weeks/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createSlice}from'@reduxjs/toolkit';import{fetchFoodData}from'../Async/fetchFoodData';var initialState={foodData:{minimum_order_price:0,merchant_name:\"\",items:[],discounts:[]},sortedFoodsData:[],isLoading:false,error:[]};export var foodDataReducer=createSlice({name:'foodDataReducer',initialState:initialState,reducers:{STORE:function STORE(state){var foodItemsNameArray=state.foodData.items.map(function(item){return item.category_name;});var FOODS_TYPES=Array.from(new Set(_toConsumableArray(foodItemsNameArray)));state.sortedFoodsData=FOODS_TYPES.map(function(type){var FOODS_LIST=state.foodData.items.filter(function(item){return item.category_name===type;});return{type:type,foodList:FOODS_LIST};});}},extraReducers:function extraReducers(builder){builder.addCase(fetchFoodData.pending,function(state){state.isLoading=true;}).addCase(fetchFoodData.fulfilled,function(state,_ref){var payload=_ref.payload;state.isLoading=false;state.foodData=payload;}).addCase(fetchFoodData.rejected,function(state,_ref2){var payload=_ref2.payload;state.isLoading=false;state.error=payload;});}});","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Reducers/foodDataReducer.ts"],"names":["createSlice","fetchFoodData","initialState","foodData","minimum_order_price","merchant_name","items","discounts","sortedFoodsData","isLoading","error","foodDataReducer","name","reducers","STORE","state","foodItemsNameArray","map","item","category_name","FOODS_TYPES","Array","from","Set","type","FOODS_LIST","filter","foodList","extraReducers","builder","addCase","pending","fulfilled","payload","rejected"],"mappings":"0IAAA,OAASA,WAAT,KAA4B,kBAA5B,CACA,OAASC,aAAT,KAA8B,wBAA9B,CAMA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,QAAQ,CAAE,CACRC,mBAAmB,CAAE,CADb,CAERC,aAAa,CAAE,EAFP,CAGRC,KAAK,CAAE,EAHC,CAIRC,SAAS,CAAE,EAJH,CADS,CAOnBC,eAAe,CAAE,EAPE,CAQnBC,SAAS,CAAE,KARQ,CASnBC,KAAK,CAAE,EATY,CAArB,CAYA,MAAO,IAAMC,CAAAA,eAAe,CAAGX,WAAW,CAAC,CACzCY,IAAI,CAAE,iBADmC,CAEzCV,YAAY,CAAEA,YAF2B,CAGzCW,QAAQ,CAAE,CACRC,KAAK,CAAE,eAACC,KAAD,CAAW,CAChB,GAAMC,CAAAA,kBAAkB,CAAGD,KAAK,CAACZ,QAAN,CAAeG,KAAf,CAAqBW,GAArB,CAAyB,SAACC,IAAD,CAAwB,CAC1E,MAAOA,CAAAA,IAAI,CAACC,aAAZ,CACD,CAF0B,CAA3B,CAGA,GAAMC,CAAAA,WAAW,CAAGC,KAAK,CAACC,IAAN,CAAW,GAAIC,CAAAA,GAAJ,oBAAYP,kBAAZ,EAAX,CAApB,CACAD,KAAK,CAACP,eAAN,CAAwBY,WAAW,CAACH,GAAZ,CAAgB,SAACO,IAAD,CAAkC,CACxE,GAAMC,CAAAA,UAAU,CAAGV,KAAK,CAACZ,QAAN,CAAeG,KAAf,CAAqBoB,MAArB,CAA4B,SAACR,IAAD,QAAiBA,CAAAA,IAAI,CAACC,aAAL,GAAuBK,IAAxC,EAA5B,CAAnB,CACA,MAAO,CACLA,IAAI,CAAEA,IADD,CAELG,QAAQ,CAAEF,UAFL,CAAP,CAID,CANuB,CAAxB,CAOD,CAbO,CAH+B,CAkBzCG,aAAa,CAAE,uBAACC,OAAD,CAAa,CAC1BA,OAAO,CAACC,OAAR,CAAgB7B,aAAa,CAAC8B,OAA9B,CAAuC,SAAChB,KAAD,CAAW,CAChDA,KAAK,CAACN,SAAN,CAAkB,IAAlB,CACD,CAFD,EAGCqB,OAHD,CAGS7B,aAAa,CAAC+B,SAHvB,CAGkC,SAACjB,KAAD,MAAwB,IAAdkB,CAAAA,OAAc,MAAdA,OAAc,CACxDlB,KAAK,CAACN,SAAN,CAAkB,KAAlB,CACAM,KAAK,CAACZ,QAAN,CAAiB8B,OAAjB,CACD,CAND,EAOCH,OAPD,CAOS7B,aAAa,CAACiC,QAPvB,CAOiC,SAACnB,KAAD,OAAwB,IAAdkB,CAAAA,OAAc,OAAdA,OAAc,CACvDlB,KAAK,CAACN,SAAN,CAAkB,KAAlB,CACAM,KAAK,CAACL,KAAN,CAAcuB,OAAd,CACD,CAVD,EAWD,CA9BwC,CAAD,CAAnC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { fetchFoodData } from '../Async/fetchFoodData';\n\nimport { Items } from '../Interface/cartInterface';\nimport { InitialFoodData } from '../Interface/foodDataInterface';\nimport { FoodsTypeProps } from '../Interface/foodDataInterface';\n\nconst initialState = {\n  foodData: {\n    minimum_order_price: 0,\n    merchant_name: \"\",\n    items: [],\n    discounts: []\n  },\n  sortedFoodsData: [],\n  isLoading: false,\n  error: []\n}\n\nexport const foodDataReducer = createSlice({\n  name: 'foodDataReducer',\n  initialState: initialState as InitialFoodData,\n  reducers: {\n    STORE: (state) => {\n      const foodItemsNameArray = state.foodData.items.map((item: Items) :string=> {\n        return item.category_name;\n      });\n      const FOODS_TYPES = Array.from(new Set([...foodItemsNameArray]));\n      state.sortedFoodsData = FOODS_TYPES.map((type:string) : FoodsTypeProps => {\n        const FOODS_LIST = state.foodData.items.filter((item: Items) => item.category_name === type) \n        return {\n          type: type,\n          foodList: FOODS_LIST\n        }\n      });\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchFoodData.pending, (state) => {\n      state.isLoading = true;\n    })\n    .addCase(fetchFoodData.fulfilled, (state, { payload }) => {\n      state.isLoading = false;\n      state.foodData = payload;\n    })\n    .addCase(fetchFoodData.rejected, (state, { payload }) => {\n      state.isLoading = false;\n      state.error = payload;\n    })\n  }\n});\n"]},"metadata":{},"sourceType":"module"}