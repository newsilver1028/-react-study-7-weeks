{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  discounts: [],\n  totalPrice: 0,\n  storedData: []\n};\nexport const discountReducer = createSlice({\n  name: 'discountReducer',\n  initialState: initialState,\n  reducers: {\n    STORE: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const data = payload.discounts;\n      state.discounts = data.map(discount => {\n        return { ...discount,\n          discountedMenu: [],\n          discountedPrices: 0,\n          selectedMenu: []\n        };\n      });\n    },\n    UPDATE: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.storedFoods = payload;\n      state.discounts = state.discounts.map(discount => {\n        discount.discountedMenu = state.storedFoods.map(food => {\n          const discountedPrice = getDiscountedPrice(food.priceTimesQuantity, discount.discount_rate);\n          const excludedPrice = getExcludedPrice(food.priceTimesQuantity, discountedPrice);\n          discount.discountedPrices += discountedPrice;\n          return {\n            name: food.name,\n            discountedPrice: discountedPrice,\n            excludedPrice: excludedPrice\n          };\n        });\n        return discount;\n      });\n    },\n    ADD: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.storedFoods = payload;\n      state.discounts = state.discounts.map(discount => {\n        state.storedFoods.forEach(food => {\n          const discountedPrice = getDiscountedPrice(food.priceTimesQuantity, discount.discount_rate);\n          const excludedPrice = getExcludedPrice(food.priceTimesQuantity, discountedPrice);\n          const menuObject = {\n            name: food.name,\n            discountedPrice: discountedPrice,\n            excludedPrice: excludedPrice\n          };\n          discount.discountedMenu.push(menuObject);\n          discount.discountedPrices += discountedPrice;\n        });\n        return discount;\n      });\n    }\n  }\n});\n\nfunction getDiscountedPrice(price, rate) {\n  return Math.floor((100 - rate) * 0.01 * price);\n}\n\nfunction getExcludedPrice(totalPrice, discountedPrice) {\n  return Math.floor(totalPrice - discountedPrice);\n}","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Reducers/discountReducer.ts"],"names":["createSlice","initialState","discounts","totalPrice","storedData","discountReducer","name","reducers","STORE","state","payload","data","map","discount","discountedMenu","discountedPrices","selectedMenu","UPDATE","storedFoods","food","discountedPrice","getDiscountedPrice","priceTimesQuantity","discount_rate","excludedPrice","getExcludedPrice","ADD","forEach","menuObject","push","price","rate","Math","floor"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { DiscountsData, Discounts } from '../Interface/discountInterface'\nimport { FoodData, StoredFoods } from '../Interface/cartInterface';\n\nexport const initialState = {\n  discounts: [],\n  totalPrice: 0,\n  storedData: []\n}\n\nexport const discountReducer = createSlice({\n  name: 'discountReducer',\n  initialState: initialState as DiscountsData,\n  reducers: {\n    STORE: (state, { payload }: PayloadAction<FoodData>) => {\n      const data = payload.discounts;\n      state.discounts = data.map((discount: Discounts) => {\n        return {\n          ...discount,\n          discountedMenu: [],\n          discountedPrices: 0,\n          selectedMenu: []\n        }\n      })\n    },\n    UPDATE: (state, { payload }: PayloadAction<StoredFoods[]>) => {\n      state.storedFoods = payload;\n      state.discounts = state.discounts.map((discount) => {\n        discount.discountedMenu = state.storedFoods!.map(food => {\n          const discountedPrice = getDiscountedPrice(food.priceTimesQuantity,discount.discount_rate);\n          const excludedPrice = getExcludedPrice(food.priceTimesQuantity, discountedPrice);\n          discount.discountedPrices! += discountedPrice;\n          return {\n            name: food.name,\n            discountedPrice: discountedPrice,\n            excludedPrice: excludedPrice\n          }\n        });\n        return discount;\n      })\n    },\n    ADD: (state, { payload }: PayloadAction<StoredFoods[]>) => {\n      state.storedFoods = payload;\n      state.discounts = state.discounts.map((discount) => {\n        state.storedFoods!.forEach((food) => {\n          const discountedPrice = getDiscountedPrice(food.priceTimesQuantity,discount.discount_rate);\n          const excludedPrice = getExcludedPrice(food.priceTimesQuantity, discountedPrice);\n          const menuObject = {\n            name: food.name,\n            discountedPrice: discountedPrice,\n            excludedPrice: excludedPrice\n          }\n          discount.discountedMenu!.push(menuObject);   \n          discount.discountedPrices! += discountedPrice;\n        });\n        return discount;\n      })\n    }\n  },\n});\n\nfunction getDiscountedPrice(price: number, rate: number): number {\n  return Math.floor((100 - rate) * 0.01 * price);\n}\n\nfunction getExcludedPrice(totalPrice: number, discountedPrice: number): number {\n  return Math.floor(totalPrice - discountedPrice);\n}\n"]},"metadata":{},"sourceType":"module"}