{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  foodData: {\n    minimum_order_price: 0,\n    merchant_name: \"\",\n    items: [],\n    discounts: []\n  },\n  clickedFoods: [],\n  totalPrice: 0,\n  isOverMinimum: false\n};\nexport const cartReducer = createSlice({\n  name: 'cartReducer',\n  initialState: initialState,\n  reducers: {\n    STORE: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.foodData = payload;\n    },\n    ADD: (state, _ref2) => {\n      var _state$clickedFoods, _state$clickedFoods2;\n\n      let {\n        payload\n      } = _ref2;\n      const target = state.foodData.items.filter(item => item.name === payload);\n\n      if ((_state$clickedFoods = state.clickedFoods) !== null && _state$clickedFoods !== void 0 && _state$clickedFoods.includes(target[0])) {}\n\n      (_state$clickedFoods2 = state.clickedFoods) === null || _state$clickedFoods2 === void 0 ? void 0 : _state$clickedFoods2.push(...target);\n    },\n    DELETE: state => {\n      return state;\n    },\n    INCREASE: state => {\n      return state;\n    },\n    DECREASE: state => {\n      return state;\n    }\n  }\n});\nexport const {\n  STORE,\n  ADD,\n  DELETE,\n  INCREASE,\n  DECREASE\n} = cartReducer.actions;","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Reducers/cartReducer.ts"],"names":["createSlice","initialState","foodData","minimum_order_price","merchant_name","items","discounts","clickedFoods","totalPrice","isOverMinimum","cartReducer","name","reducers","STORE","state","payload","ADD","target","filter","item","includes","push","DELETE","INCREASE","DECREASE","actions"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AA8BA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,mBAAmB,EAAE,CADb;AAERC,IAAAA,aAAa,EAAE,EAFP;AAGRC,IAAAA,KAAK,EAAE,EAHC;AAIRC,IAAAA,SAAS,EAAE;AAJH,GADgB;AAO1BC,EAAAA,YAAY,EAAE,EAPY;AAQ1BC,EAAAA,UAAU,EAAE,CARc;AAS1BC,EAAAA,aAAa,EAAE;AATW,CAArB;AAYP,OAAO,MAAMC,WAAW,GAAGV,WAAW,CAAC;AACrCW,EAAAA,IAAI,EAAE,aAD+B;AAErCV,EAAAA,YAAY,EAAEA,YAFuB;AAGrCW,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,CAACC,KAAD,WAAiD;AAAA,UAAzC;AAAEC,QAAAA;AAAF,OAAyC;AACtDD,MAAAA,KAAK,CAACZ,QAAN,GAAiBa,OAAjB;AACD,KAHO;AAIRC,IAAAA,GAAG,EAAE,CAACF,KAAD,YAA+C;AAAA;;AAAA,UAAvC;AAAEC,QAAAA;AAAF,OAAuC;AAClD,YAAME,MAAM,GAAGH,KAAK,CAACZ,QAAN,CAAeG,KAAf,CAAqBa,MAArB,CAA6BC,IAAD,IAAiBA,IAAI,CAACR,IAAL,KAAcI,OAA3D,CAAf;;AACA,iCAAID,KAAK,CAACP,YAAV,gDAAI,oBAAoBa,QAApB,CAA6BH,MAAM,CAAC,CAAD,CAAnC,CAAJ,EAA6C,CAE5C;;AACD,8BAAAH,KAAK,CAACP,YAAN,8EAAoBc,IAApB,CAAyB,GAAGJ,MAA5B;AACD,KAVO;AAWRK,IAAAA,MAAM,EAAGR,KAAD,IAAW;AACjB,aAAOA,KAAP;AACD,KAbO;AAcRS,IAAAA,QAAQ,EAAGT,KAAD,IAAW;AACnB,aAAOA,KAAP;AACD,KAhBO;AAiBRU,IAAAA,QAAQ,EAAGV,KAAD,IAAW;AACnB,aAAOA,KAAP;AACD;AAnBO;AAH2B,CAAD,CAA/B;AA0BP,OAAO,MAAM;AAAED,EAAAA,KAAF;AAASG,EAAAA,GAAT;AAAcM,EAAAA,MAAd;AAAsBC,EAAAA,QAAtB;AAAgCC,EAAAA;AAAhC,IAA6Cd,WAAW,CAACe,OAA/D","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface Data {\n  foodData: FoodData;\n  clickedFoods?: Items[];\n  totalPrice?: number;\n  isOverMinimum?: boolean;\n}\n\nexport interface FoodData {\n  minimum_order_price: number;\n  merchant_name: string;\n  items: Items[];\n  discounts: Discounts[];\n}\n\nexport interface Items {\n  id: string;\n  category_id: string;\n  category_name: string;\n  name: string;\n  price: number;\n}\n\nexport interface Discounts {\n  id: string;\n  name: string;\n  discount_rate: number;\n}\n\nexport const initialState = {\n  foodData: {\n    minimum_order_price: 0,\n    merchant_name: \"\",\n    items: [],\n    discounts: []\n  },\n  clickedFoods: [],\n  totalPrice: 0,\n  isOverMinimum: false,\n}\n\nexport const cartReducer = createSlice({\n  name: 'cartReducer',\n  initialState: initialState as Data,\n  reducers: {\n    STORE: (state, { payload }: PayloadAction<FoodData>) => {\n      state.foodData = payload;\n    },\n    ADD: (state, { payload }: PayloadAction<string>) => {\n      const target = state.foodData.items.filter((item: Items) => item.name === payload);\n      if (state.clickedFoods?.includes(target[0])) {\n\n      }\n      state.clickedFoods?.push(...target);\n    },\n    DELETE: (state) => {\n      return state;\n    },\n    INCREASE: (state) => {\n      return state;\n    },\n    DECREASE: (state) => {\n      return state;\n    }\n  }\n});\n\nexport const { STORE, ADD, DELETE, INCREASE, DECREASE } = cartReducer.actions;\n"]},"metadata":{},"sourceType":"module"}