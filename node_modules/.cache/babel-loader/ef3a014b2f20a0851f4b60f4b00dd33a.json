{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchFoodData } from '../Async/fetchFoodData';\nconst initialState = {\n  foodData: {\n    minimum_order_price: 0,\n    merchant_name: \"\",\n    items: [],\n    discounts: []\n  },\n  sortedFoodData: [],\n  isLoading: false,\n  error: []\n};\nexport const foodDataReducer = createSlice({\n  name: 'foodDataReducer',\n  initialState: initialState,\n  reducers: {// STORE: (state, { payload }: PayloadAction<FoodData>) => {\n    //   state.foodData = payload;\n    // }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchFoodData.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchFoodData.fulfilled, (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.isLoading = false;\n      state.foodData = payload;\n    }).addCase(fetchFoodData.rejected, (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.isLoading = false;\n      state.error = payload;\n    });\n  }\n});","map":{"version":3,"sources":["/Users/newsilver/Project/react-study-7-weeks/src/Reducers/foodDataReducer.ts"],"names":["createSlice","fetchFoodData","initialState","foodData","minimum_order_price","merchant_name","items","discounts","sortedFoodData","isLoading","error","foodDataReducer","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,mBAAmB,EAAE,CADb;AAERC,IAAAA,aAAa,EAAE,EAFP;AAGRC,IAAAA,KAAK,EAAE,EAHC;AAIRC,IAAAA,SAAS,EAAE;AAJH,GADS;AAOnBC,EAAAA,cAAc,EAAE,EAPG;AAQnBC,EAAAA,SAAS,EAAE,KARQ;AASnBC,EAAAA,KAAK,EAAE;AATY,CAArB;AAYA,OAAO,MAAMC,eAAe,GAAGX,WAAW,CAAC;AACzCY,EAAAA,IAAI,EAAE,iBADmC;AAEzCV,EAAAA,YAAY,EAAEA,YAF2B;AAGzCW,EAAAA,QAAQ,EAAE,CACR;AACA;AACA;AAHQ,GAH+B;AAQzCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBf,aAAa,CAACgB,OAA9B,EAAwCC,KAAD,IAAW;AAChDA,MAAAA,KAAK,CAACT,SAAN,GAAkB,IAAlB;AACD,KAFD,EAGCO,OAHD,CAGSf,aAAa,CAACkB,SAHvB,EAGkC,CAACD,KAAD,WAAwB;AAAA,UAAhB;AAAEE,QAAAA;AAAF,OAAgB;AACxDF,MAAAA,KAAK,CAACT,SAAN,GAAkB,KAAlB;AACAS,MAAAA,KAAK,CAACf,QAAN,GAAiBiB,OAAjB;AACD,KAND,EAOCJ,OAPD,CAOSf,aAAa,CAACoB,QAPvB,EAOiC,CAACH,KAAD,YAAwB;AAAA,UAAhB;AAAEE,QAAAA;AAAF,OAAgB;AACvDF,MAAAA,KAAK,CAACT,SAAN,GAAkB,KAAlB;AACAS,MAAAA,KAAK,CAACR,KAAN,GAAcU,OAAd;AACD,KAVD;AAWD;AApBwC,CAAD,CAAnC","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { fetchFoodData } from '../Async/fetchFoodData';\n\nimport { FoodData } from './cartReducer';\nimport { FoodsTypeProps } from '../Components/FoodsCategories';\n\nexport interface InitialFoodData {\n  foodData: FoodData;\n  sortedFoodData: FoodsTypeProps[];\n  isLoading: boolean;\n  error?: unknown;\n}\n\nconst initialState = {\n  foodData: {\n    minimum_order_price: 0,\n    merchant_name: \"\",\n    items: [],\n    discounts: []\n  },\n  sortedFoodData: [],\n  isLoading: false,\n  error: []\n}\n\nexport const foodDataReducer = createSlice({\n  name: 'foodDataReducer',\n  initialState: initialState as InitialFoodData,\n  reducers: {\n    // STORE: (state, { payload }: PayloadAction<FoodData>) => {\n    //   state.foodData = payload;\n    // }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchFoodData.pending, (state) => {\n      state.isLoading = true;\n    })\n    .addCase(fetchFoodData.fulfilled, (state, { payload }) => {\n      state.isLoading = false;\n      state.foodData = payload;\n    })\n    .addCase(fetchFoodData.rejected, (state, { payload }) => {\n      state.isLoading = false;\n      state.error = payload;\n    })\n  }\n});\n"]},"metadata":{},"sourceType":"module"}